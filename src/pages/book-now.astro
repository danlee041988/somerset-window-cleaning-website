---
import Layout from '~/layouts/PageLayout.astro';
import Image from '~/components/common/Image.astro';
import { siteConfig } from '~/config/site';

const metadata = {
  title: 'Book Cleaning Services Online | Advanced Booking System | Somerset Window Cleaning',
  description: 'Book window cleaning, solar panel cleaning, conservatory roof cleaning, and more. Instant pricing for window cleaning, quotes for specialist services. 4 easy steps.',
  ignoreTitleTemplate: true,
};
---

<Layout metadata={metadata} structuredDataType="services">
  <!-- Hero Section -->
  <div class="relative bg-gradient-to-br from-gray-900 to-black py-16 overflow-hidden">
    <div class="absolute inset-0">
      <Image 
        src="~/assets/images/new-hero-image.jpg" 
        alt="Professional window cleaning service" 
        width={1600} 
        height={600} 
        style="width:100%; height:100%; object-fit:cover; opacity:0.3;" 
      />
      <div class="absolute inset-0 bg-gradient-to-r from-black/60 to-gray-900/60"></div>
    </div>
    <div class="relative max-w-6xl mx-auto px-4 text-center">
      <div class="inline-flex items-center bg-red-600 text-white px-4 py-2 rounded-full text-sm font-semibold mb-4">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
        Book in 4 Easy Steps
      </div>
      <h1 class="text-4xl md:text-6xl font-bold text-white mb-4">
        Book Your <span class="text-red-500">Cleaning Service</span> Online
      </h1>
      <p class="text-gray-200 text-xl mb-8 max-w-3xl mx-auto">
        Advanced booking system with instant pricing, flexible scheduling, and secure online payments. 
        Join 4,000+ satisfied customers across Somerset.
      </p>
      
      <!-- Trust Indicators -->
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-4xl mx-auto">
        <div class="flex flex-col items-center text-center p-4">
          <svg class="w-8 h-8 text-red-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span class="text-white font-medium text-sm">Instant Pricing</span>
        </div>
        <div class="flex flex-col items-center text-center p-4">
          <svg class="w-8 h-8 text-red-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a2 2 0 012-2h4a2 2 0 012 2v4m-4 8v0m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z"/>
          </svg>
          <span class="text-white font-medium text-sm">Secure Booking</span>
        </div>
        <div class="flex flex-col items-center text-center p-4">
          <svg class="w-8 h-8 text-red-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span class="text-white font-medium text-sm">Flexible Scheduling</span>
        </div>
        <div class="flex flex-col items-center text-center p-4">
          <svg class="w-8 h-8 text-red-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
          </svg>
          <span class="text-white font-medium text-sm">{siteConfig.guaranteeHours}hr Guarantee</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Booking Form Section -->
  <section class="py-12 bg-gray-50">
    <div class="max-w-6xl mx-auto px-4">
      <!-- Booking Form Container -->
      <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
        <div class="booking-form-container">
          <form class="booking-form" id="bookingForm" novalidate>
            <!-- Progress Bar -->
            <div class="form-progress bg-gray-100 p-4 border-b">
              <div class="max-w-4xl mx-auto">
                <div class="flex items-center justify-between">
                  <div class="progress-step active" data-step="1">
                    <div class="step-circle">1</div>
                    <span class="step-text">Service</span>
                  </div>
                  <div class="progress-line"></div>
                  <div class="progress-step" data-step="2">
                    <div class="step-circle">2</div>
                    <span class="step-text">Additional</span>
                  </div>
                  <div class="progress-line"></div>
                  <div class="progress-step" data-step="3">
                    <div class="step-circle">3</div>
                    <span class="step-text">Details</span>
                  </div>
                  <div class="progress-line"></div>
                  <div class="progress-step" data-step="4">
                    <div class="step-circle">4</div>
                    <span class="step-text">Review</span>
                  </div>
                </div>
              </div>
            </div>

            <!-- Step 1: Service Selection -->
            <div class="form-step active" id="step1">
              <div class="max-w-4xl mx-auto p-6 md:p-8">
                <div class="text-center mb-8">
                  <h2 class="text-3xl font-bold text-gray-800 mb-3">Select Your Service</h2>
                  <p class="text-gray-600">Choose your property type for window cleaning or skip to additional services</p>
                  <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mt-4 mb-6">
                    <p class="text-sm text-blue-800"><strong>Note:</strong> Prices shown are for standard property sizes. Final pricing may be adjusted on-site based on actual property size and requirements, with your agreement.</p>
                  </div>
                </div>

                <div class="space-y-8">
                  <!-- Property Type Section -->
                  <div class="property-type-section">
                    <label class="block text-lg font-semibold text-gray-700 mb-4">Window Cleaning - Property Type</label>
                    <p class="text-sm text-gray-600 mb-4 italic">Select if you want window cleaning, or skip to Step 2 for other services only</p>
                    <div class="error-message" id="propertyTypeError" style="display: none;"></div>
                    
                    <!-- Hidden select for form compatibility -->
                    <select name="propertyType" id="propertyType" required class="sr-only" aria-hidden="true">
                      <option value="">Select your property type...</option>
                    </select>
                    
                    <!-- Property Type Cards -->
                    <div class="space-y-6">
                      <!-- Semi-Detached Houses -->
                      <div>
                        <h4 class="text-md font-medium text-gray-600 mb-3">Semi-Detached Houses</h4>
                        <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
                          <button type="button" class="property-card" data-property-type="semi-2" data-price="20">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                              </svg>
                              <div class="font-semibold text-gray-800">2 Bed</div>
                              <div class="text-red-600 font-bold">£20</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="semi-3" data-price="25">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                              </svg>
                              <div class="font-semibold text-gray-800">3 Bed</div>
                              <div class="text-red-600 font-bold">£25</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="semi-4" data-price="28">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                              </svg>
                              <div class="font-semibold text-gray-800">4 Bed</div>
                              <div class="text-red-600 font-bold">£28</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="semi-5" data-price="32">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                              </svg>
                              <div class="font-semibold text-gray-800">5 Bed</div>
                              <div class="text-red-600 font-bold">£32</div>
                            </div>
                          </button>
                        </div>
                      </div>

                      <!-- Detached Houses -->
                      <div>
                        <h4 class="text-md font-medium text-gray-600 mb-3">Detached Houses</h4>
                        <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
                          <button type="button" class="property-card" data-property-type="detached-2" data-price="25">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                              </svg>
                              <div class="font-semibold text-gray-800">2 Bed</div>
                              <div class="text-red-600 font-bold">£25</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="detached-3" data-price="30">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                              </svg>
                              <div class="font-semibold">3 Bed</div>
                              <div class="text-red-600 font-bold">£30</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="detached-4" data-price="35">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                              </svg>
                              <div class="font-semibold text-gray-800">4 Bed</div>
                              <div class="text-red-600 font-bold">£35</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="detached-5" data-price="40">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                              </svg>
                              <div class="font-semibold text-gray-800">5 Bed</div>
                              <div class="text-red-600 font-bold">£40</div>
                            </div>
                          </button>
                        </div>
                      </div>

                      <!-- Other Property Types -->
                      <div>
                        <h4 class="text-md font-medium text-gray-600 mb-3">Other Property Types</h4>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
                          <button type="button" class="property-card" data-property-type="custom" data-price="0">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z"/>
                              </svg>
                              <div class="font-semibold text-gray-800">Large Property (6+ bed)</div>
                              <div class="text-gray-600 text-sm">Quote Required</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="commercial" data-price="0">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                              </svg>
                              <div class="font-semibold text-gray-800">Commercial Property</div>
                              <div class="text-gray-600 text-sm">Quote Required</div>
                            </div>
                          </button>
                          <button type="button" class="property-card" data-property-type="general" data-price="0">
                            <div class="border-2 border-gray-300 rounded-lg p-4 hover:border-red-500 hover:bg-red-50 transition-all cursor-pointer text-center">
                              <svg class="w-8 h-8 mx-auto mb-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-4l-4 4z"/>
                              </svg>
                              <div class="font-semibold text-gray-800">General Enquiry</div>
                              <div class="text-gray-600 text-sm">Contact us</div>
                            </div>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Frequency Section -->
                  <div class="frequency-section" style="display: none;">
                    <label class="block text-lg font-semibold text-gray-700 mb-4">Cleaning Frequency *</label>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                      <label class="frequency-option cursor-pointer">
                        <input type="radio" name="frequency" value="4weekly" checked class="sr-only">
                        <div class="frequency-content border-2 border-gray-300 rounded-lg p-4 text-center hover:border-red-400 transition-colors">
                          <h4 class="font-semibold text-lg text-gray-800">Every 4 Weeks</h4>
                          <p class="text-sm text-gray-700">Regular service</p>
                          <p class="text-lg font-bold text-red-600 mt-2">Base Price</p>
                        </div>
                      </label>
                      <label class="frequency-option cursor-pointer">
                        <input type="radio" name="frequency" value="8weekly" class="sr-only">
                        <div class="frequency-content border-2 border-gray-300 rounded-lg p-4 text-center hover:border-red-400 transition-colors">
                          <h4 class="font-semibold text-lg text-gray-800">Every 8 Weeks</h4>
                          <p class="text-sm text-gray-700">+£3 per clean</p>
                          <p class="text-lg font-bold text-red-600 mt-2">+£3</p>
                        </div>
                      </label>
                      <label class="frequency-option cursor-pointer">
                        <input type="radio" name="frequency" value="12weekly" class="sr-only">
                        <div class="frequency-content border-2 border-gray-300 rounded-lg p-4 text-center hover:border-red-400 transition-colors">
                          <h4 class="font-semibold text-lg text-gray-800">Every 12 Weeks</h4>
                          <p class="text-sm text-gray-700">+£5 per clean</p>
                          <p class="text-lg font-bold text-red-600 mt-2">+£5</p>
                        </div>
                      </label>
                      <label class="frequency-option cursor-pointer">
                        <input type="radio" name="frequency" value="onetime" class="sr-only">
                        <div class="frequency-content border-2 border-gray-300 rounded-lg p-4 text-center hover:border-red-400 transition-colors">
                          <h4 class="font-semibold text-lg text-gray-800">One-time Clean</h4>
                          <p class="text-sm text-gray-700">+£20 per clean</p>
                          <p class="text-lg font-bold text-red-600 mt-2">+£20</p>
                        </div>
                      </label>
                    </div>
                  </div>
                  
                  <!-- Price Display -->
                  <div class="price-display bg-red-50 rounded-lg p-6 text-center" style="display: none;">
                    <h3 class="text-2xl font-bold text-gray-800 mb-2">Estimated Price</h3>
                    <div class="price-amount text-4xl font-bold text-red-600" id="step1Price">£0</div>
                    <p class="text-gray-600 mt-2">per clean (excluding additional services)</p>
                  </div>
                </div>
                
                <div class="form-navigation mt-8 flex justify-between">
                  <button type="button" class="px-6 py-3 bg-gray-400 text-gray-200 rounded-lg font-medium cursor-not-allowed" disabled>Previous</button>
                  <button type="button" class="px-8 py-3 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 transition-colors" onclick="nextStep()">
                    <span id="step1NextText">Next Step →</span>
                  </button>
                </div>
              </div>
            </div>
            
            <!-- Step 2: Additional Services -->
            <div class="form-step" id="step2">
              <div class="max-w-4xl mx-auto p-6 md:p-8">
                <div class="text-center mb-8">
                  <h2 class="text-3xl font-bold text-gray-800 mb-3">Additional Services</h2>
                  <p class="text-gray-600">Select any additional services you'd like to add</p>
                  <div class="bg-amber-50 border border-amber-200 rounded-lg p-4 mt-4">
                    <p class="text-sm text-amber-800"><strong>Note:</strong> Solar Panel and Conservatory Roof cleaning require on-site assessment for accurate pricing. We'll provide a firm quote during our visit.</p>
                  </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <label class="service-card-option cursor-pointer">
                    <input type="checkbox" name="additionalServices" value="gutterInternal" class="sr-only">
                    <div class="service-card-content border-2 border-gray-300 rounded-lg p-6 hover:border-red-400 transition-colors">
                      <div class="flex items-start justify-between">
                        <div>
                          <h4 class="font-semibold text-xl text-gray-800 mb-2">Gutter Clearing (Internal)</h4>
                          <p class="text-gray-700 mb-4">Remove leaves and debris from inside gutters using our high-reach vacuum system</p>
                          <span class="service-price text-2xl font-bold text-red-600">From £{siteConfig.services.gutter.fromPrice.replace('£', '')}</span>
                        </div>
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"/>
                        </svg>
                      </div>
                    </div>
                  </label>
                  
                  <label class="service-card-option cursor-pointer">
                    <input type="checkbox" name="additionalServices" value="gutterExternal" class="sr-only">
                    <div class="service-card-content border-2 border-gray-300 rounded-lg p-6 hover:border-red-400 transition-colors">
                      <div class="flex items-start justify-between">
                        <div>
                          <h4 class="font-semibold text-xl text-gray-800 mb-2">Fascia & Soffit Cleaning</h4>
                          <p class="text-gray-700 mb-4">Clean the outside of gutters, fascias and soffits to restore UPVC</p>
                          <span class="service-price text-2xl font-bold text-red-600">From £{siteConfig.services.fascia.fromPrice.replace('£', '')}</span>
                        </div>
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                        </svg>
                      </div>
                    </div>
                  </label>
                  
                  <label class="service-card-option cursor-pointer">
                    <input type="checkbox" name="additionalServices" value="solar" class="sr-only">
                    <div class="service-card-content border-2 border-gray-300 rounded-lg p-6 hover:border-red-400 transition-colors">
                      <div class="flex items-start justify-between">
                        <div>
                          <h4 class="font-semibold text-xl text-gray-800 mb-2">Solar Panel Cleaning</h4>
                          <p class="text-gray-700 mb-4">Specialist cleaning to maximize efficiency and maintain warranties</p>
                          <span class="service-price text-2xl font-bold text-gray-700">Quote Required</span>
                        </div>
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
                        </svg>
                      </div>
                    </div>
                  </label>
                  
                  <label class="service-card-option cursor-pointer">
                    <input type="checkbox" name="additionalServices" value="conservatory" class="sr-only">
                    <div class="service-card-content border-2 border-gray-300 rounded-lg p-6 hover:border-red-400 transition-colors">
                      <div class="flex items-start justify-between">
                        <div>
                          <h4 class="font-semibold text-xl text-gray-800 mb-2">Conservatory Roof Cleaning</h4>
                          <p class="text-gray-700 mb-4">Complete conservatory roof cleaning service for glass and polycarbonate</p>
                          <span class="service-price text-2xl font-bold text-gray-700">Quote Required</span>
                        </div>
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
                        </svg>
                      </div>
                    </div>
                  </label>
                </div>
                
                <!-- Special Offer Alert -->
                <div class="special-offer bg-green-50 border border-green-200 rounded-lg p-4 mt-6" id="gutterOffer" style="display: none;">
                  <div class="flex items-center">
                    <svg class="w-8 h-8 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    <div>
                      <h4 class="font-semibold text-green-800 text-lg">🎉 Special Offer!</h4>
                      <p class="text-green-700">Select both gutter services and get your windows cleaned FREE!</p>
                    </div>
                  </div>
                </div>
                
                <div class="form-navigation mt-8 flex justify-between">
                  <button type="button" class="px-6 py-3 bg-gray-500 text-white rounded-lg font-medium hover:bg-gray-600 transition-colors" onclick="previousStep()">← Previous</button>
                  <button type="button" class="px-8 py-3 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 transition-colors" onclick="nextStep()">Next Step →</button>
                </div>
              </div>
            </div>
            
            <!-- Step 3: Customer Details -->
            <div class="form-step" id="step3">
              <div class="max-w-4xl mx-auto p-6 md:p-8">
                <div class="text-center mb-8">
                  <h2 class="text-3xl font-bold text-gray-800 mb-3">Your Details</h2>
                  <p class="text-gray-600">We need your contact information to confirm your booking</p>
                </div>

                <div class="space-y-6">
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="form-group">
                      <label class="block text-lg font-medium text-gray-700 mb-2">Full Name *</label>
                      <input type="text" name="fullName" required class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent" placeholder="Enter your full name">
                      <div class="error-message field-error" style="display: none;"></div>
                    </div>
                    <div class="form-group">
                      <label class="block text-lg font-medium text-gray-700 mb-2">Email Address *</label>
                      <input type="email" name="email" required class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent" placeholder="your.email@example.com">
                      <div class="error-message field-error" style="display: none;"></div>
                    </div>
                  </div>
                  
                  <div class="form-group">
                    <label class="block text-lg font-medium text-gray-700 mb-2">Property Address *</label>
                    <input type="text" name="address" placeholder="Enter your full address" required class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                    <div class="error-message field-error" style="display: none;"></div>
                  </div>
                  
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="form-group">
                      <label class="block text-lg font-medium text-gray-700 mb-2">Town/City *</label>
                      <input type="text" name="city" required class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent" placeholder="e.g., Bath, Wells, Street">
                    </div>
                    <div class="form-group">
                      <label class="block text-lg font-medium text-gray-700 mb-2">Postcode *</label>
                      <input type="text" name="postcode" required pattern="[A-Za-z]{1,2}[0-9]{1,2}[A-Za-z]?\s?[0-9][A-Za-z]{2}" class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent" placeholder="e.g., BA16 0HW">
                    </div>
                  </div>
                  
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="form-group">
                      <label class="block text-lg font-medium text-gray-700 mb-2">Phone Number *</label>
                      <input type="tel" name="phone" required class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent" placeholder="07123 456789">
                    </div>
                    <div class="form-group">
                      <label class="block text-lg font-medium text-gray-700 mb-2">Preferred Contact Method *</label>
                      <select name="contactMethod" required class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                        <option value="email">Email</option>
                        <option value="phone">Phone</option>
                        <option value="text">Text Message</option>
                      </select>
                    </div>
                  </div>
                  
                  <div class="form-group" id="preferredDateGroup" style="display: none;">
                    <label class="block text-lg font-medium text-gray-700 mb-2">Preferred Start Date</label>
                    <select name="preferredDate" id="preferredDate" class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                      <option value="">Select available date</option>
                    </select>
                    <p class="text-sm text-gray-500 mt-2">Available dates based on your postcode area and our scheduling</p>
                  </div>
                  
                  <div class="form-group">
                    <label class="block text-lg font-medium text-gray-700 mb-2">Additional Notes</label>
                    <textarea name="notes" rows="4" class="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-red-500 focus:border-transparent" placeholder="Any special requirements, access instructions, or questions..."></textarea>
                  </div>
                </div>
                
                <div class="form-navigation mt-8 flex justify-between">
                  <button type="button" class="px-6 py-3 bg-gray-500 text-white rounded-lg font-medium hover:bg-gray-600 transition-colors" onclick="previousStep()">← Previous</button>
                  <button type="button" class="px-8 py-3 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 transition-colors" onclick="nextStep()">Next Step →</button>
                </div>
              </div>
            </div>
            
            <!-- Step 4: Review & Submit -->
            <div class="form-step" id="step4">
              <div class="max-w-4xl mx-auto p-6 md:p-8">
                <div class="text-center mb-8">
                  <h2 class="text-3xl font-bold text-gray-800 mb-3">Review Your Booking</h2>
                  <p class="text-gray-600">Please check all details before submitting your booking</p>
                </div>

                <div class="space-y-6">
                  <div class="booking-summary bg-gray-50 rounded-lg p-6">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                      <div class="summary-section">
                        <h3 class="text-xl font-semibold text-gray-800 mb-4">Service Details</h3>
                        <div id="serviceSummary" class="space-y-2 text-gray-700"></div>
                      </div>
                      
                      <div class="summary-section">
                        <h3 class="text-xl font-semibold text-gray-800 mb-4">Contact Information</h3>
                        <div id="contactSummary" class="space-y-2 text-gray-700"></div>
                      </div>
                    </div>
                    
                    <div class="summary-section mt-8 pt-6 border-t border-gray-200">
                      <h3 class="text-xl font-semibold text-gray-800 mb-4">Price Summary</h3>
                      <div id="priceSummary" class="text-gray-700"></div>
                    </div>
                  </div>
                  
                  <div class="recaptcha-container">
                    <div id="recaptcha"></div>
                  </div>
                  
                  <div class="terms-agreement">
                    <label class="flex items-start space-x-3 cursor-pointer">
                      <input type="checkbox" name="termsAgreed" required class="mt-1 h-5 w-5 text-red-600 focus:ring-red-500 border-gray-300 rounded">
                      <span class="text-gray-700">
                        I agree to the <a href="/terms" target="_blank" class="text-red-600 hover:underline">terms and conditions</a> 
                        and <a href="/privacy" target="_blank" class="text-red-600 hover:underline">privacy policy</a>
                      </span>
                    </label>
                  </div>
                </div>
                
                <div class="form-navigation mt-8 flex justify-between">
                  <button type="button" class="px-6 py-3 bg-gray-500 text-white rounded-lg font-medium hover:bg-gray-600 transition-colors" onclick="previousStep()">← Previous</button>
                  <button type="submit" class="px-8 py-3 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors" id="submitBtn">
                    <svg class="w-5 h-5 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    Submit Booking
                  </button>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>

      <!-- Booking Benefits -->
      <div class="mt-12 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div class="benefit-item text-center p-6 bg-white rounded-lg shadow-md">
          <svg class="w-12 h-12 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <h4 class="font-semibold text-lg text-gray-800 mb-2">Instant Confirmation</h4>
          <p class="text-gray-600">Get your booking confirmed immediately via email and SMS</p>
        </div>
        <div class="benefit-item text-center p-6 bg-white rounded-lg shadow-md">
          <svg class="w-12 h-12 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a2 2 0 012-2h4a2 2 0 012 2v4m-4 8v0m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z"/>
          </svg>
          <h4 class="font-semibold text-lg text-gray-800 mb-2">Secure Booking</h4>
          <p class="text-gray-600">Your personal information is encrypted and securely protected</p>
        </div>
        <div class="benefit-item text-center p-6 bg-white rounded-lg shadow-md">
          <svg class="w-12 h-12 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <h4 class="font-semibold text-lg text-gray-800 mb-2">Flexible Scheduling</h4>
          <p class="text-gray-600">Choose from available dates that suit your schedule</p>
        </div>
        <div class="benefit-item text-center p-6 bg-white rounded-lg shadow-md">
          <svg class="w-12 h-12 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
          </svg>
          <h4 class="font-semibold text-lg text-gray-800 mb-2">{siteConfig.guaranteeHours}hr Guarantee</h4>
          <p class="text-gray-600">100% satisfaction or we'll re-clean for free</p>
        </div>
      </div>
    </div>
  </section>
</Layout>

<!-- Booking Form Styles -->
<style>
  /* Property card styles */
  .property-card div {
    transition: all 0.3s ease;
  }
  
  .property-card:hover div svg {
    color: #ef4444;
  }
  
  .property-card div.border-red-500 svg {
    color: #ef4444;
  }
  
  .property-card div.border-red-500 .font-semibold {
    color: #1f2937;
  }
  
  .property-card div.border-red-500 .text-red-600 {
    color: #dc2626;
  }
  
  /* Error message styles */
  .error-message {
    color: #dc2626;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }
  
  .field-error {
    color: #dc2626;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }
  
  /* Success message styles */
  .success-message {
    background-color: #f0fdf4;
    border: 1px solid #86efac;
    color: #166534;
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }
  
  /* Loading state */
  .loading-spinner {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: #fff;
    animation: spin 1s ease-in-out infinite;
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .form-progress {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }

  .progress-step {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    flex: 1;
  }

  .step-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #e5e7eb;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    color: #6b7280;
    transition: all 0.3s ease;
  }

  .step-text {
    margin-top: 8px;
    font-size: 14px;
    font-weight: 500;
    color: #6b7280;
    transition: all 0.3s ease;
  }

  .progress-step.active .step-circle {
    background: #dc2626;
    color: white;
  }

  .progress-step.active .step-text {
    color: #dc2626;
    font-weight: 600;
  }

  .progress-line {
    height: 2px;
    flex: 1;
    background: #e5e7eb;
    margin: 0 20px;
    margin-top: 20px;
  }

  .form-step {
    display: none;
  }

  .form-step.active {
    display: block;
  }

  .frequency-option input:checked + .frequency-content {
    border-color: #dc2626;
    background: #fef2f2;
  }
  
  .frequency-option input:checked + .frequency-content h4 {
    color: #1f2937;
  }
  
  .frequency-option input:checked + .frequency-content p {
    color: #374151;
  }

  .service-card-option input:checked + .service-card-content {
    border-color: #dc2626;
    background: #fef2f2;
  }

  .service-card-option input:checked + .service-card-content svg {
    color: #dc2626;
  }
  
  .service-card-option input:checked + .service-card-content h4 {
    color: #1f2937;
  }
  
  .service-card-option input:checked + .service-card-content p {
    color: #374151;
  }

  @media (max-width: 768px) {
    .progress-step {
      flex-direction: row;
      align-items: center;
    }

    .step-text {
      margin-top: 0;
      margin-left: 8px;
    }

    .progress-line {
      margin: 0;
      height: 20px;
      width: 2px;
    }
  }
</style>

<!-- Enhanced error handling and validation -->
<script>
  // Define inline validation functions
  function showInlineError(field, message) {
    const errorElement = field.parentElement.querySelector('.error-message, .field-error');
    if (errorElement) {
      errorElement.textContent = message;
      errorElement.style.display = 'block';
    }
    field.classList.add('border-red-500');
  }
  
  function clearInlineError(field) {
    const errorElement = field.parentElement.querySelector('.error-message, .field-error');
    if (errorElement) {
      errorElement.style.display = 'none';
    }
    field.classList.remove('border-red-500');
  }
  
  // Clear all errors on page load
  document.addEventListener('DOMContentLoaded', function() {
    // Clear any existing error messages
    document.querySelectorAll('.error-message, .field-error').forEach(el => {
      el.style.display = 'none';
    });
    
    // Remove error styling from inputs
    document.querySelectorAll('input, select, textarea').forEach(el => {
      el.classList.remove('border-red-500');
    });
  });
</script>

<!-- Booking Form JavaScript -->
<script>
// Embedded booking form functionality
console.log('Loading booking form...');

// Form state management
window.formState = {
    propertyType: '',
    frequency: '4weekly',
    additionalServices: [],
    fullName: '',
    email: '',
    address: '',
    city: '',
    postcode: '',
    phone: '',
    contactMethod: 'email',
    preferredDate: '',
    notes: '',
    termsAgreed: false
};

let currentStep = 1;
const totalSteps = 4;

// Property prices
const propertyPrices = {
    'semi-2': 20,
    'semi-3': 25,
    'semi-4': 28,
    'semi-5': 32,
    'detached-2': 25,
    'detached-3': 30,
    'detached-4': 35,
    'detached-5': 40,
    'custom': 0,
    'commercial': 0,
    'general': 0
};

const frequencyAdjustments = {
    '4weekly': 0,
    '8weekly': 3,
    '12weekly': 5,
    'onetime': 20
};

// Navigation functions
window.nextStep = function() {
    console.log('nextStep called - Current step:', currentStep);
    
    // Clear any existing top-level error messages
    document.querySelectorAll('.booking-message').forEach(msg => msg.remove());
    
    // Force sync formState with current form values before validation
    if (currentStep === 1) {
        const propertyTypeSelect = document.getElementById('propertyType');
        if (propertyTypeSelect) {
            window.formState.propertyType = propertyTypeSelect.value;
            console.log('Property type:', window.formState.propertyType);
        }
    } else if (currentStep === 3) {
        // Sync all form fields on step 3
        ['fullName', 'email', 'address', 'city', 'postcode', 'phone'].forEach(field => {
            const input = document.querySelector(`[name="${field}"]`);
            if (input) {
                window.formState[field] = input.value.trim();
            }
        });
    }
    
    if (validateStep(currentStep)) {
        if (currentStep < totalSteps) {
            currentStep++;
            showStep(currentStep);
            // Smooth scroll to top of form
            const formContainer = document.querySelector('.booking-form-container');
            if (formContainer) {
                formContainer.scrollIntoView({ 
                    behavior: 'smooth', 
                    block: 'start' 
                });
            }
        }
    }
};

window.previousStep = function() {
    if (currentStep > 1) {
        currentStep--;
        showStep(currentStep);
        const formContainer = document.querySelector('.booking-form-container');
        if (formContainer) {
            formContainer.scrollIntoView({ 
                behavior: 'smooth', 
                block: 'start' 
            });
        }
    }
};

function validateStep(step) {
    console.log('Validating step:', step);
    let isValid = true;
    
    switch (step) {
        case 1:
            // Allow skipping window cleaning selection - it's optional
            const propertyTypeSelect = document.getElementById('propertyType');
            if (propertyTypeSelect && window.formState.propertyType && window.formState.propertyType !== '') {
                // Clear any errors if property type is selected
                if (typeof clearInlineError === 'function') {
                    clearInlineError(propertyTypeSelect);
                }
                const errorDiv = document.getElementById('propertyTypeError');
                if (errorDiv) {
                    errorDiv.style.display = 'none';
                }
            }
            return true;
            
        case 2:
            // Check if at least one service is selected (window cleaning or additional)
            const hasWindowCleaning = window.formState.propertyType && window.formState.propertyType !== '';
            const hasAdditionalServices = window.formState.additionalServices && window.formState.additionalServices.length > 0;
            
            if (!hasWindowCleaning && !hasAdditionalServices) {
                // Show error message
                const formContainer = document.getElementById('step2');
                const existingError = formContainer?.querySelector('.service-selection-error');
                if (!existingError && formContainer) {
                    const errorDiv = document.createElement('div');
                    errorDiv.className = 'service-selection-error bg-red-50 border border-red-200 rounded-lg p-4 mb-4 text-red-700';
                    errorDiv.innerHTML = '<svg class="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/></svg>Please select at least one service (window cleaning or additional services)';
                    const contentDiv = formContainer.querySelector('.max-w-4xl');
                    if (contentDiv) {
                        contentDiv.insertBefore(errorDiv, contentDiv.querySelector('.grid'));
                    }
                }
                return false;
            } else {
                // Remove error if exists
                const existingError = document.querySelector('.service-selection-error');
                if (existingError) {
                    existingError.remove();
                }
            }
            return true;
            
        case 3:
            // Validate each field individually with inline errors
            const fields = {
                fullName: { required: true, message: 'Please enter your full name' },
                email: { required: true, pattern: /^[^\s@]+@[^\s@]+\.[^\s@]+$/, message: 'Please enter a valid email address' },
                address: { required: true, message: 'Please enter your address' },
                city: { required: true, message: 'Please enter your city' },
                postcode: { required: true, pattern: /^[A-Z]{1,2}[0-9][A-Z0-9]?\s?[0-9][A-Z]{2}$/i, message: 'Please enter a valid UK postcode' },
                phone: { required: true, pattern: /^(?:(?:\+44\s?|0)(?:1\d{8,9}|2\d{9}|3\d{9}|7\d{9}|8\d{9}))$/, message: 'Please enter a valid UK phone number' }
            };
            
            Object.entries(fields).forEach(([fieldName, validation]) => {
                const input = document.querySelector(`[name="${fieldName}"]`);
                if (input) {
                    const value = input.value.trim();
                    
                    if (validation.required && !value) {
                        if (typeof showInlineError === 'function') {
                            showInlineError(input, validation.message);
                        }
                        isValid = false;
                    } else if (validation.pattern && value && !validation.pattern.test(value)) {
                        if (typeof showInlineError === 'function') {
                            showInlineError(input, validation.message);
                        }
                        isValid = false;
                    } else {
                        if (typeof clearInlineError === 'function') {
                            clearInlineError(input);
                        }
                    }
                }
            });
            
            if (!isValid) {
                // Focus on first error field
                const firstError = document.querySelector('.border-red-500');
                if (firstError) {
                    firstError.focus();
                }
            }
            
            return isValid;
            
        case 4:
            const termsCheckbox = document.querySelector('[name="termsAgreed"]');
            if (!window.formState.termsAgreed) {
                // Show inline error for terms
                const termsContainer = termsCheckbox?.closest('.terms-agreement');
                if (termsContainer) {
                    const existingError = termsContainer.querySelector('.error-message');
                    if (!existingError) {
                        const errorDiv = document.createElement('div');
                        errorDiv.className = 'error-message text-red-600 text-sm mt-2';
                        errorDiv.textContent = 'Please agree to the terms and conditions';
                        termsContainer.appendChild(errorDiv);
                    }
                }
                return false;
            }
            return true;
            
        default:
            return true;
    }
}

function showStep(step) {
    console.log('Showing step:', step);
    document.querySelectorAll('.form-step').forEach(s => s.classList.remove('active'));
    const stepElement = document.getElementById(`step${step}`);
    if (stepElement) {
        stepElement.classList.add('active');
    }
    updateProgressBar();
    
    // Update review summary on step 4
    if (step === 4) {
        updateReviewSummary();
    }
}

function updateProgressBar() {
    document.querySelectorAll('.progress-step').forEach((step, index) => {
        if (index < currentStep) {
            step.classList.add('active');
        } else {
            step.classList.remove('active');
        }
    });
}

function updatePriceDisplay() {
    const basePrice = propertyPrices[window.formState.propertyType] || 0;
    const adjustment = frequencyAdjustments[window.formState.frequency] || 0;
    const totalPrice = basePrice + adjustment;
    
    const priceElement = document.getElementById('step1Price');
    if (priceElement) {
        priceElement.textContent = basePrice > 0 ? `£${totalPrice}` : 'Quote Required';
    }
}

function updateReviewSummary() {
    // Service summary
    const serviceSummary = document.getElementById('serviceSummary');
    if (serviceSummary) {
        let html = '';
        
        // Window cleaning details if selected
        if (window.formState.propertyType && window.formState.propertyType !== '') {
            const propertyTypeSelect = document.getElementById('propertyType');
            const propertyTypeText = propertyTypeSelect?.options[propertyTypeSelect.selectedIndex]?.text || '';
            html += `<p><strong>Window Cleaning:</strong> ${propertyTypeText}</p>`;
            if (window.formState.frequency) {
                const freqText = {
                    '4weekly': 'Every 4 weeks',
                    '8weekly': 'Every 8 weeks',
                    '12weekly': 'Every 12 weeks',
                    'onetime': 'One-time clean'
                }[window.formState.frequency] || window.formState.frequency;
                html += `<p><strong>Frequency:</strong> ${freqText}</p>`;
            }
        }
        
        // Additional services if selected
        if (window.formState.additionalServices && window.formState.additionalServices.length > 0) {
            html += '<p class="mt-3"><strong>Additional Services:</strong></p>';
            const serviceNames = {
                'gutterInternal': 'Gutter Clearing (Internal)',
                'gutterExternal': 'Fascia & Soffit Cleaning',
                'solar': 'Solar Panel Cleaning (Quote Required)',
                'conservatory': 'Conservatory Roof Cleaning (Quote Required)'
            };
            window.formState.additionalServices.forEach(service => {
                html += `<p class="ml-4">• ${serviceNames[service] || service}</p>`;
            });
        }
        
        if (!html) {
            html = '<p class="text-gray-500">No services selected</p>';
        }
        
        serviceSummary.innerHTML = html;
    }
    
    // Contact summary
    const contactSummary = document.getElementById('contactSummary');
    if (contactSummary) {
        contactSummary.innerHTML = `
            <p><strong>Name:</strong> ${window.formState.fullName || 'Not provided'}</p>
            <p><strong>Email:</strong> ${window.formState.email || 'Not provided'}</p>
            <p><strong>Phone:</strong> ${window.formState.phone || 'Not provided'}</p>
            <p><strong>Address:</strong> ${window.formState.address || 'Not provided'}</p>
        `;
    }
    
    // Price summary
    const priceSummary = document.getElementById('priceSummary');
    if (priceSummary) {
        let priceHtml = '';
        const basePrice = propertyPrices[window.formState.propertyType] || 0;
        const adjustment = frequencyAdjustments[window.formState.frequency] || 0;
        const windowCleaningPrice = basePrice + adjustment;
        
        if (basePrice > 0) {
            priceHtml += `<div class="mb-2"><strong>Window Cleaning:</strong> <span class="text-xl font-bold text-red-600">£${windowCleaningPrice}</span> per clean</div>`;
        }
        
        // Check for additional services that need quotes
        const needsQuote = window.formState.additionalServices && 
            (window.formState.additionalServices.includes('solar') || 
             window.formState.additionalServices.includes('conservatory'));
        
        if (needsQuote || (!basePrice && window.formState.additionalServices.length > 0)) {
            priceHtml += '<div class="text-lg font-semibold text-gray-700 mt-2">Additional services require on-site quote</div>';
        }
        
        if (!priceHtml) {
            priceHtml = '<div class="text-lg font-semibold text-gray-700">Quote Required</div>';
        }
        
        priceSummary.innerHTML = priceHtml;
    }
}

// Initialize form handlers
function initializeForm() {
    console.log('Initializing form...');
    
    // Set initial button text
    const step1NextText = document.getElementById('step1NextText');
    if (step1NextText) {
        step1NextText.textContent = 'Skip to Additional Services →';
    }
    
    // Property card handlers
    const propertyCards = document.querySelectorAll('.property-card');
    const propertyTypeSelect = document.getElementById('propertyType');
    
    propertyCards.forEach(card => {
        card.addEventListener('click', function() {
            // Remove selected state from all cards
            propertyCards.forEach(c => {
                c.querySelector('div').classList.remove('border-red-500', 'bg-red-50');
                c.querySelector('div').classList.add('border-gray-300');
            });
            
            // Add selected state to clicked card
            this.querySelector('div').classList.remove('border-gray-300');
            this.querySelector('div').classList.add('border-red-500', 'bg-red-50');
            
            // Update hidden select
            const propertyType = this.getAttribute('data-property-type');
            const price = this.getAttribute('data-price');
            
            if (propertyTypeSelect) {
                // Add the option if it doesn't exist
                let option = propertyTypeSelect.querySelector(`option[value="${propertyType}"]`);
                if (!option) {
                    option = document.createElement('option');
                    option.value = propertyType;
                    option.text = propertyType;
                    propertyTypeSelect.appendChild(option);
                }
                propertyTypeSelect.value = propertyType;
                
                // Trigger change event
                const event = new Event('change', { bubbles: true });
                propertyTypeSelect.dispatchEvent(event);
            }
        });
    });
    
    // Property type handler
    if (propertyTypeSelect) {
        // Set initial value
        window.formState.propertyType = propertyTypeSelect.value;
        
        propertyTypeSelect.addEventListener('change', (e) => {
            window.formState.propertyType = e.target.value;
            console.log('Property type changed:', window.formState.propertyType);
            
            // Show/hide frequency section
            const frequencySection = document.querySelector('.frequency-section');
            const priceDisplay = document.querySelector('.price-display');
            const step1NextText = document.getElementById('step1NextText');
            
            if (window.formState.propertyType && 
                window.formState.propertyType !== 'custom' && 
                window.formState.propertyType !== 'commercial' && 
                window.formState.propertyType !== 'general') {
                if (frequencySection) frequencySection.style.display = 'block';
                if (priceDisplay) priceDisplay.style.display = 'block';
                updatePriceDisplay();
                if (step1NextText) step1NextText.textContent = 'Next Step →';
            } else {
                if (frequencySection) frequencySection.style.display = 'none';
                if (priceDisplay) priceDisplay.style.display = 'none';
                if (step1NextText) step1NextText.textContent = 'Skip to Additional Services →';
            }
        });
    }
    
    // Frequency handler
    document.querySelectorAll('input[name="frequency"]').forEach(radio => {
        radio.addEventListener('change', (e) => {
            window.formState.frequency = e.target.value;
            updatePriceDisplay();
            
            // Update visual state
            document.querySelectorAll('.frequency-option').forEach(option => {
                const input = option.querySelector('input[name="frequency"]');
                const content = option.querySelector('.frequency-content');
                if (input && content) {
                    if (input.checked) {
                        content.style.borderColor = '#dc2626';
                        content.style.backgroundColor = '#fef2f2';
                    } else {
                        content.style.borderColor = '#d1d5db';
                        content.style.backgroundColor = 'white';
                    }
                }
            });
        });
    });
    
    // Additional services handler
    document.querySelectorAll('input[name="additionalServices"]').forEach(checkbox => {
        checkbox.addEventListener('change', (e) => {
            if (e.target.checked) {
                if (!window.formState.additionalServices.includes(e.target.value)) {
                    window.formState.additionalServices.push(e.target.value);
                }
            } else {
                window.formState.additionalServices = window.formState.additionalServices.filter(
                    service => service !== e.target.value
                );
            }
            
            // Update visual state
            const parent = e.target.closest('.service-card-option');
            const content = parent?.querySelector('.service-card-content');
            if (content) {
                if (e.target.checked) {
                    content.style.borderColor = '#dc2626';
                    content.style.backgroundColor = '#fef2f2';
                    const icon = content.querySelector('svg');
                    if (icon) icon.style.color = '#dc2626';
                } else {
                    content.style.borderColor = '#d1d5db';
                    content.style.backgroundColor = 'white';
                    const icon = content.querySelector('svg');
                    if (icon) icon.style.color = '#9ca3af';
                }
            }
        });
    });
    
    // Form inputs handler
    document.querySelectorAll('#bookingForm input, #bookingForm select, #bookingForm textarea').forEach(input => {
        input.addEventListener('change', (e) => {
            const name = e.target.name;
            const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;
            if (name && window.formState.hasOwnProperty(name)) {
                window.formState[name] = value;
                console.log(`${name} changed:`, value);
            }
        });
    });
    
    // Form submission
    const bookingForm = document.getElementById('bookingForm');
    if (bookingForm) {
        bookingForm.addEventListener('submit', (e) => {
            e.preventDefault();
            if (validateStep(4)) {
                alert('Booking submitted successfully! We will contact you within 24 hours.');
                // Reset form
                currentStep = 1;
                showStep(1);
            }
        });
    }
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeForm);
} else {
    initializeForm();
}

console.log('Booking form loaded successfully');
</script>

<!-- Additional fix for property type selection error -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const propertyTypeSelect = document.getElementById('propertyType');
    
    if (propertyTypeSelect) {
      // Add immediate error clearing on selection change
      propertyTypeSelect.addEventListener('change', function(e) {
        console.log('Property type selected:', e.target.value);
        
        if (e.target.value && e.target.value !== '') {
          // Remove all error messages immediately
          const errorSelectors = [
            '.booking-message',
            '.error-message', 
            '.bg-red-50',
            '[class*="error"]'
          ];
          
          errorSelectors.forEach(selector => {
            document.querySelectorAll(selector).forEach(el => {
              if (el.textContent && el.textContent.includes('Please select a property type')) {
                el.style.display = 'none';
                el.remove();
                console.log('Removed error element:', el);
              }
            });
          });
        }
      });
      
      // Also trigger on page load if a value is already selected
      if (propertyTypeSelect.value && propertyTypeSelect.value !== '') {
        setTimeout(() => {
          const event = new Event('change', { bubbles: true });
          propertyTypeSelect.dispatchEvent(event);
        }, 200);
      }
    }
  });
</script>