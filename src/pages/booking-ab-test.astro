---
// A/B Test Router for Booking Flow
// This page randomly redirects users to either 4-step or 2-step booking flow

const metadata = {
  title: 'Book Window Cleaning - Somerset Window Cleaning',
  description: 'Book professional window cleaning services online with our optimized booking system.',
};
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{metadata.title}</title>
  <meta name="description" content={metadata.description}>
  
  <!-- Preload both booking pages for faster transitions -->
  <link rel="preload" href="/booking" as="document">
  <link rel="preload" href="/booking-2step" as="document">
  
  <style>
    body {
      margin: 0;
      padding: 0;
      background: #111827;
      color: white;
      font-family: 'Inter', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
    }
    
    .loader {
      text-align: center;
    }
    
    .spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #374151;
      border-top: 4px solid #dc2626;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: 0 auto 20px;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .text {
      color: #9ca3af;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="loader">
    <div class="spinner"></div>
    <div class="text">Optimizing your booking experience...</div>
  </div>

  <script>
    // A/B Test Configuration
    const AB_TEST_CONFIG = {
      testName: 'booking-flow-optimization',
      variants: [
        { name: 'control', url: '/booking', weight: 50 },      // Original 4-step
        { name: 'variant', url: '/booking-2step', weight: 50 } // New 2-step
      ]
    };

    // A/B Test Logic
    function runABTest() {
      const testKey = 'booking_flow_test_variant';
      
      // Check if user already has a variant assigned
      let assignedVariant = localStorage.getItem(testKey);
      
      if (!assignedVariant) {
        // New user - assign variant based on weights
        const random = Math.random() * 100;
        let cumulative = 0;
        
        for (const variant of AB_TEST_CONFIG.variants) {
          cumulative += variant.weight;
          if (random <= cumulative) {
            assignedVariant = variant.name;
            break;
          }
        }
        
        // Store the assignment
        localStorage.setItem(testKey, assignedVariant);
        
        // Track the assignment for analytics
        trackABTestAssignment(assignedVariant);
      }
      
      // Find the variant configuration
      const variant = AB_TEST_CONFIG.variants.find(v => v.name === assignedVariant);
      
      if (variant) {
        // Add a small delay to show the loading state
        setTimeout(() => {
          window.location.replace(variant.url);
        }, 500);
      } else {
        // Fallback to control
        setTimeout(() => {
          window.location.replace('/booking');
        }, 500);
      }
    }

    // Analytics tracking function
    function trackABTestAssignment(variant) {
      // Track with Google Analytics if available
      if (typeof gtag !== 'undefined') {
        gtag('event', 'ab_test_assignment', {
          'test_name': AB_TEST_CONFIG.testName,
          'variant': variant,
          'custom_parameter_1': variant
        });
      }
      
      // Track with custom analytics
      if (typeof analytics !== 'undefined') {
        analytics.track('A/B Test Assignment', {
          testName: AB_TEST_CONFIG.testName,
          variant: variant,
          timestamp: new Date().toISOString()
        });
      }
      
      // Console log for debugging
      console.log(`A/B Test: User assigned to ${variant} variant`);
    }

    // Utility function to get current test variant (for other pages to use)
    window.getBookingTestVariant = function() {
      return localStorage.getItem('booking_flow_test_variant') || 'control';
    };

    // Utility function to track conversion events
    window.trackBookingConversion = function(step, data = {}) {
      const variant = window.getBookingTestVariant();
      
      if (typeof gtag !== 'undefined') {
        gtag('event', 'booking_conversion', {
          'test_variant': variant,
          'conversion_step': step,
          'custom_parameter_1': step,
          'value': data.value || 0
        });
      }
      
      console.log(`Booking Conversion: ${step} (${variant} variant)`, data);
    };

    // Start the test
    document.addEventListener('DOMContentLoaded', function() {
      runABTest();
    });

    // Fallback for browsers without localStorage
    if (typeof(Storage) === "undefined") {
      setTimeout(() => {
        window.location.replace('/booking');
      }, 500);
    }
  </script>
</body>
</html>