---
import Layout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import FAQs from '~/components/widgets/FAQs.astro';
import CallToAction from '~/components/widgets/CallToAction.astro';
import Image from '~/components/common/Image.astro';

const metadata = {
  title: 'Book Window Cleaning Online - Somerset Window Cleaning | Instant Quote & Booking',
  description: 'Book professional window cleaning in Somerset online. Get instant pricing for residential and commercial properties. Fully insured service with transparent pricing.',
};
---

<Layout metadata={metadata}>
  <!-- Compact Hero Section -->
  <div class="relative bg-gray-900 py-12">
    <div class="absolute inset-0">
      <Image src="~/assets/images/solar-panels.jpeg" alt="" width={1600} height={400} layout="cover" style="width:100%; height:100%; object-fit:cover; opacity:0.2;" />
    </div>
    <div class="relative max-w-7xl mx-auto px-4 text-center">
      <h1 class="text-3xl font-bold text-white mb-2">Professional Window Cleaning <span class="text-red-500">Book Online</span></h1>
      <p class="text-gray-300 text-lg">Instant Quote & Book Online - Select your property for transparent pricing</p>
    </div>
  </div>

  <!-- Compact Multi-Step Booking Form -->
  <div class="bg-gray-900 min-h-screen">
    <div class="max-w-7xl mx-auto px-4 py-6">
      
      <!-- Compact Progress Steps -->
      <div class="mb-6">
        <div class="flex items-center justify-center space-x-3 mb-4">
          <div class="flex items-center">
            <div id="step-1-indicator" class="w-6 h-6 bg-red-600 text-white rounded-full flex items-center justify-center text-xs font-bold">1</div>
            <span class="ml-1 text-xs font-medium text-white">Property</span>
          </div>
          <div class="w-6 h-0.5 bg-gray-600"><div id="progress-1" class="h-full bg-red-600 transition-all duration-300" style="width: 0%"></div></div>
          
          <div class="flex items-center">
            <div id="step-2-indicator" class="w-6 h-6 bg-gray-600 text-gray-300 rounded-full flex items-center justify-center text-xs font-bold">2</div>
            <span class="ml-1 text-xs font-medium text-gray-300">Services</span>
          </div>
          <div class="w-6 h-0.5 bg-gray-600"><div id="progress-2" class="h-full bg-red-600 transition-all duration-300" style="width: 0%"></div></div>
          
          <div class="flex items-center">
            <div id="step-3-indicator" class="w-6 h-6 bg-gray-600 text-gray-300 rounded-full flex items-center justify-center text-xs font-bold">3</div>
            <span class="ml-1 text-xs font-medium text-gray-300">Details</span>
          </div>
          <div class="w-6 h-0.5 bg-gray-600"><div id="progress-3" class="h-full bg-red-600 transition-all duration-300" style="width: 0%"></div></div>
          
          <div class="flex items-center">
            <div id="step-4-indicator" class="w-6 h-6 bg-gray-600 text-gray-300 rounded-full flex items-center justify-center text-xs font-bold">4</div>
            <span class="ml-1 text-xs font-medium text-gray-300">Review</span>
          </div>
        </div>
      </div>

      <div class="grid lg:grid-cols-4 gap-6">
        
        <!-- Left Column: Form Steps (3/4 width) -->
        <div class="lg:col-span-3">
          
          <!-- Step 1: Bedroom Selection First -->
          <div id="step-1" class="bg-gray-800 rounded-lg border border-gray-700 p-4 mb-4">
            <h2 class="text-lg font-bold text-white mb-3">Step 1: How many bedrooms?</h2>
            <p class="text-sm text-gray-300 mb-4">Select your property size - prices are based on standard property sizes. Any price changes will be confirmed before work begins.</p>
            
            <!-- Mobile-Optimized Property Grid -->
            <div class="mb-6">
              <p class="text-sm text-gray-300 mb-4">Select your property type for accurate pricing</p>
              <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                <!-- Residential Properties -->
                <button class="bedroom-option bg-gray-700 border-2 border-gray-600 p-3 rounded-lg hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-bedrooms="1-2 Bed">
                  <div class="text-center">
                    <div class="w-8 h-8 bg-red-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <span class="text-white text-sm font-bold">1-2</span>
                    </div>
                    <div class="text-sm font-medium text-white">1-2 Bed</div>
                  </div>
                </button>
                
                <button class="bedroom-option bg-gray-700 border-2 border-gray-600 p-3 rounded-lg hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-bedrooms="2-3 Bed">
                  <div class="text-center">
                    <div class="w-8 h-8 bg-red-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <span class="text-white text-sm font-bold">2-3</span>
                    </div>
                    <div class="text-sm font-medium text-white">2-3 Bed</div>
                  </div>
                </button>
                
                <button class="bedroom-option bg-gray-700 border-2 border-gray-600 p-3 rounded-lg hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-bedrooms="4 Bed">
                  <div class="text-center">
                    <div class="w-8 h-8 bg-red-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <span class="text-white text-sm font-bold">4</span>
                    </div>
                    <div class="text-sm font-medium text-white">4 Bed</div>
                  </div>
                </button>
                
                <button class="bedroom-option bg-gray-700 border-2 border-gray-600 p-3 rounded-lg hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-bedrooms="5 Bed">
                  <div class="text-center">
                    <div class="w-8 h-8 bg-red-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <span class="text-white text-sm font-bold">5</span>
                    </div>
                    <div class="text-sm font-medium text-white">5 Bed</div>
                  </div>
                </button>
                
                <!-- Commercial Properties -->
                <button class="bedroom-option bg-gray-700 border-2 border-gray-600 p-3 rounded-lg hover:border-blue-500 hover:bg-gray-600 transition-all duration-300" data-bedrooms="6+ Beds" data-is-commercial="true">
                  <div class="text-center">
                    <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <span class="text-white text-sm font-bold">6+</span>
                    </div>
                    <div class="text-sm font-medium text-white">6+ Bed</div>
                  </div>
                </button>
                
                <button class="bedroom-option bg-gray-700 border-2 border-gray-600 p-3 rounded-lg hover:border-blue-500 hover:bg-gray-600 transition-all duration-300" data-bedrooms="Commercial" data-is-commercial="true">
                  <div class="text-center">
                    <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10z"/>
                      </svg>
                    </div>
                    <div class="text-sm font-medium text-white">Commercial</div>
                  </div>
                </button>
              </div>
            </div>
            
            <!-- Property Type Selection (appears after residential bedroom selection) -->
            <div class="mt-4" id="property-type-section" style="display: none;">
              <h3 class="text-sm font-medium text-white mb-2">What type of property?</h3>
              <div class="grid grid-cols-1 sm:grid-cols-3 gap-3 mb-6">
                <button class="property-type-option bg-gray-700 border-2 border-gray-600 p-4 rounded-lg hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-property-type="Terraced House">
                  <div class="text-center">
                    <div class="w-10 h-10 bg-red-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M19 9.3V4h-3v2.6L12 3 2 12h3v8h5v-6h4v6h5v-8h3l-3-2.7z"/>
                      </svg>
                    </div>
                    <div class="text-sm font-medium text-white">Terraced</div>
                  </div>
                </button>
                
                <button class="property-type-option bg-gray-700 border-2 border-gray-600 p-4 rounded-lg hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-property-type="Semi-Detached House">
                  <div class="text-center">
                    <div class="w-10 h-10 bg-red-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
                      </svg>
                    </div>
                    <div class="text-sm font-medium text-white">Semi-Detached</div>
                  </div>
                </button>
                
                <button class="property-type-option bg-gray-700 border-2 border-gray-600 p-4 rounded-lg hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-property-type="Detached House">
                  <div class="text-center">
                    <div class="w-10 h-10 bg-red-600 rounded-full flex items-center justify-center mx-auto mb-2">
                      <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 3l10 9h-3v8h-5v-6H10v6H5v-8H2L12 3z"/>
                      </svg>
                    </div>
                    <div class="text-sm font-medium text-white">Detached</div>
                  </div>
                </button>
              </div>
            </div>
            
            <!-- Frequency Selection (appears after property type selection) -->
            <div class="mt-4" id="frequency-section" style="display: none;">
              <h3 class="text-sm font-medium text-white mb-2">How often would you like us to clean?</h3>
              <div class="grid grid-cols-2 sm:grid-cols-4 gap-2 mb-6">
                <button class="frequency-option bg-gray-700 border border-gray-600 px-3 py-2 rounded text-sm text-white hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-frequency="4-weekly">Every 4 weeks</button>
                <button class="frequency-option bg-gray-700 border border-gray-600 px-3 py-2 rounded text-sm text-white hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-frequency="8-weekly">Every 8 weeks</button>
                <button class="frequency-option bg-gray-700 border border-gray-600 px-3 py-2 rounded text-sm text-white hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-frequency="12-weekly">Every 12 weeks</button>
                <button class="frequency-option bg-gray-700 border border-gray-600 px-3 py-2 rounded text-sm text-white hover:border-red-500 hover:bg-gray-600 transition-all duration-300" data-frequency="adhoc">One-off clean</button>
              </div>
            </div>
            
            <!-- Extensions/Conservatory Section -->
            <div class="mt-4" id="extensions-section" style="display: none;">
              <h3 class="text-sm font-medium text-white mb-2">Do you have any extensions or conservatories?</h3>
              <p class="text-xs text-gray-400 mb-3">Each extension or conservatory adds £5 to the total price</p>
              <div class="space-y-2">
                <label class="flex items-center p-2 bg-gray-700 rounded border border-gray-600 hover:border-red-500 transition-all duration-300">
                  <input type="checkbox" id="extension" class="sr-only extension-checkbox">
                  <div class="checkbox-custom w-4 h-4 border-2 border-gray-400 rounded mr-2 flex items-center justify-center">
                    <svg class="w-2 h-2 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                    </svg>
                  </div>
                  <span class="text-sm text-white">Extension (+£5)</span>
                </label>
                
                <label class="flex items-center p-2 bg-gray-700 rounded border border-gray-600 hover:border-red-500 transition-all duration-300">
                  <input type="checkbox" id="conservatory" class="sr-only extension-checkbox">
                  <div class="checkbox-custom w-4 h-4 border-2 border-gray-400 rounded mr-2 flex items-center justify-center">
                    <svg class="w-2 h-2 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                    </svg>
                  </div>
                  <span class="text-sm text-white">Conservatory (+£5)</span>
                </label>
              </div>
            </div>
            
            <!-- Continue Button -->
            <div class="mt-6" id="continue-section" style="display: none;">
              <button id="continue-to-details" class="w-full bg-red-600 hover:bg-red-700 text-white font-medium py-3 px-6 rounded-lg transition-all duration-300 flex items-center justify-center space-x-2">
                <span>Continue to Details</span>
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
              </button>
            </div>
          </div>

          <!-- Step 1B: Commercial/Bespoke Info -->  
          <div id="step-1b-commercial" class="bg-gray-800 rounded-lg border border-gray-700 p-4 mb-4 hidden">
            <h2 class="text-lg font-bold text-white mb-3">Commercial & Bespoke Properties</h2>
            <p class="text-gray-300 mb-4">We'll need some additional information to provide you with an accurate quote.</p>
            
            <div class="space-y-4">
              <div>
                <label class="block text-sm font-medium text-white mb-1">Property Type</label>
                <select id="commercialPropertyType" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none">
                  <option value="">Select property type...</option>
                  <option value="Office Building">Office Building</option>
                  <option value="Retail Store">Retail Store</option>
                  <option value="Restaurant/Cafe">Restaurant/Cafe</option>
                  <option value="Warehouse">Warehouse</option>
                  <option value="Industrial Unit">Industrial Unit</option>
                  <option value="Large Residential (6+ beds)">Large Residential (6+ beds)</option>
                  <option value="Care Home">Care Home</option>
                  <option value="School/Educational">School/Educational</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-white mb-1">Approximate Size/Floors</label>
                <input type="text" id="commercialSize" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" placeholder="e.g., 2 floors, 50 windows, 10,000 sq ft">
              </div>
              
              <div>
                <label class="block text-sm font-medium text-white mb-1">Services Required</label>
                <div class="space-y-2">
                  <label class="flex items-center">
                    <input type="checkbox" id="commercial-windows" class="mr-2 text-red-600">
                    <span class="text-sm text-white">Window Cleaning (Interior & Exterior)</span>
                  </label>
                  <label class="flex items-center">
                    <input type="checkbox" id="commercial-gutters" class="mr-2 text-red-600">
                    <span class="text-sm text-white">Gutter Cleaning</span>
                  </label>
                  <label class="flex items-center">
                    <input type="checkbox" id="commercial-pressure" class="mr-2 text-red-600">
                    <span class="text-sm text-white">Pressure Washing</span>
                  </label>
                  <label class="flex items-center">
                    <input type="checkbox" id="commercial-fascia" class="mr-2 text-red-600">
                    <span class="text-sm text-white">Fascia & Soffit Cleaning</span>
                  </label>
                </div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-white mb-1">Frequency</label>
                <select id="commercialFrequency" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none">
                  <option value="">Select frequency...</option>
                  <option value="Weekly">Weekly</option>
                  <option value="Fortnightly">Fortnightly</option>
                  <option value="Monthly">Monthly</option>
                  <option value="Quarterly">Quarterly</option>
                  <option value="One-off">One-off</option>
                </select>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-white mb-1">Additional Information</label>
                <textarea id="commercialNotes" rows="3" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" placeholder="Access requirements, special equipment needed, preferred times, etc."></textarea>
              </div>
            </div>
            
            <!-- Continue Button for Commercial -->
            <div class="mt-6">
              <button id="continue-commercial" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-all duration-300 flex items-center justify-center space-x-2">
                <span>Continue to Contact Details</span>
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
              </button>
            </div>
          </div>

          <!-- Step 2: Additional Services -->
          <div id="step-2" class="bg-gray-800 rounded-lg border border-gray-700 p-4 mb-4 hidden">
            <h2 class="text-lg font-bold text-white mb-3">Step 2: Additional services (optional)</h2>
            
            <!-- Special Deal Banner -->
            <div id="gutter-deal-banner" class="bg-gradient-to-r from-blue-600 to-purple-700 rounded-lg p-4 mb-4 border-2 border-yellow-400">
              <div class="flex items-center justify-center text-center">
                <div>
                  <div class="text-white font-bold text-lg">🎉 SPECIAL OFFER!</div>
                  <div class="text-white text-sm mt-1">Book <strong>both gutter services</strong> and get your <strong>first window clean FREE!</strong></div>
                  <div id="deal-status" class="text-yellow-200 text-xs mt-2 font-medium">Select both services below to activate this deal</div>
                </div>
              </div>
            </div>
            
            <div class="space-y-3">
              <label class="flex items-center p-3 bg-gray-700 rounded-lg border border-gray-600 hover:border-red-500 transition-all duration-300" id="gutterClearing-label">
                <input type="checkbox" id="gutterClearing" class="sr-only addon-checkbox">
                <div class="checkbox-custom w-5 h-5 border-2 border-gray-400 rounded mr-3 flex items-center justify-center">
                  <svg class="w-3 h-3 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                </div>
                <div class="flex-1">
                  <div class="text-white font-medium">Gutter Clearing</div>
                  <div class="text-gray-300 text-sm">Removal of leaves, debris and blockages from gutters</div>
                </div>
                <div class="text-red-400 font-medium" id="gutterClearing-price">From £70</div>
              </label>
              
              <label class="flex items-center p-3 bg-gray-700 rounded-lg border border-gray-600 hover:border-red-500 transition-all duration-300" id="fasciaSoffitGutter-label">
                <input type="checkbox" id="fasciaSoffitGutter" class="sr-only addon-checkbox">
                <div class="checkbox-custom w-5 h-5 border-2 border-gray-400 rounded mr-3 flex items-center justify-center">
                  <svg class="w-3 h-3 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                </div>
                <div class="flex-1">
                  <div class="text-white font-medium">Fascia, Soffit & Gutter Cleaning</div>
                  <div class="text-gray-300 text-sm">External wash and cleaning of fascia boards, soffits and gutters</div>
                </div>
                <div class="text-red-400 font-medium" id="fasciaSoffitGutter-price">£60</div>
              </label>
              
              <label class="flex items-center p-3 bg-gray-700 rounded-lg border border-gray-600 hover:border-red-500 transition-all duration-300">
                <input type="checkbox" id="conservatoryRoof" class="sr-only addon-checkbox">
                <div class="checkbox-custom w-5 h-5 border-2 border-gray-400 rounded mr-3 flex items-center justify-center">
                  <svg class="w-3 h-3 text-white hidden" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                  </svg>
                </div>
                <div class="flex-1">
                  <div class="text-white font-medium">Conservatory Roof Cleaning</div>
                  <div class="text-gray-300 text-sm">Quote request - we'll contact you with pricing</div>
                </div>
                <div class="text-red-400 font-medium">Quote</div>
              </label>
            </div>
          </div>

          <!-- Step 3: Property Details -->
          <div id="step-3" class="bg-gray-800 rounded-lg border border-gray-700 p-4 mb-4 hidden">
            <h2 class="text-lg font-bold text-white mb-3">Step 3: Your details</h2>
            
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4">
              <div>
                <label class="block text-sm font-medium text-white mb-1">First Name *</label>
                <input type="text" id="firstName" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" required>
              </div>
              <div>
                <label class="block text-sm font-medium text-white mb-1">Last Name *</label>
                <input type="text" id="lastName" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" required>
              </div>
              <div>
                <label class="block text-sm font-medium text-white mb-1">Email *</label>
                <input type="email" id="email" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" required>
              </div>
              <div>
                <label class="block text-sm font-medium text-white mb-1">Phone *</label>
                <input type="tel" id="phone" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" required>
              </div>
            </div>
            
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4">
              <div>
                <label class="block text-sm font-medium text-white mb-1">Address *</label>
                <input type="text" id="address" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" required>
              </div>
              <div>
                <label class="block text-sm font-medium text-white mb-1">Postcode *</label>
                <input type="text" id="postcode" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" required>
              </div>
            </div>
            
            <div class="mb-4">
              <label class="block text-sm font-medium text-white mb-1">Access Information</label>
              <textarea id="accessInfo" rows="2" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" placeholder="Any access notes, gate codes, etc."></textarea>
            </div>
            
            <div class="mb-4">
              <label class="block text-sm font-medium text-white mb-1">Additional Information</label>
              <textarea id="additionalInfo" rows="2" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:outline-none" placeholder="Any special requirements or notes"></textarea>
            </div>
          </div>

          <!-- Step 4: Review & Submit -->
          <div id="step-4" class="bg-gray-800 rounded-lg border border-gray-700 p-4 mb-4 hidden">
            <h2 class="text-lg font-bold text-white mb-3">Step 4: Review your booking</h2>
            
            <div id="review-content" class="space-y-3 text-white">
              <!-- Content will be populated by JavaScript -->
            </div>
            
            <div class="mt-4 pt-4 border-t border-gray-700">
              <div class="text-center mb-4">
                <div class="g-recaptcha" data-sitekey="6LdYsQATAAAAAO5QsgCpuMlQ0jF2U9yjV5jTlcjG"></div>
              </div>
              <button id="submit-booking" class="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-4 rounded-lg transition-all duration-300">
                Submit Booking Request
              </button>
            </div>
          </div>

          <!-- Navigation Buttons -->
          <div class="flex justify-between mt-4">
            <button id="prev-step" class="bg-gray-700 hover:bg-gray-600 text-white font-medium py-2 px-4 rounded-lg transition-all duration-300 hidden">
              Previous
            </button>
            <button id="next-step" class="bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-lg transition-all duration-300 ml-auto hidden">
              Continue
            </button>
          </div>
        </div>
        
        <!-- Right Column: Fixed Quote Section (1/4 width) -->
        <div class="lg:col-span-1">
          <div class="bg-gray-800 rounded-lg border border-gray-700 p-4 sticky top-4">
            <h3 class="text-lg font-bold text-white mb-3">Your Quote</h3>
            
            <div id="quote-content" class="space-y-2 text-sm">
              <div class="flex justify-between text-gray-300">
                <span>Select bedrooms to continue...</span>
              </div>
            </div>
            
            <div class="border-t border-gray-700 mt-4 pt-4">
              <div class="flex justify-between text-lg font-bold text-white">
                <span>Total:</span>
                <span id="total-price" class="text-red-400">£0</span>
              </div>
            </div>
            
            <div class="mt-4 text-xs text-gray-400">
              <p>* Regular cleaning service</p>
              <p>* Fully insured</p>
              <p>* No obligation quote</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- JavaScript for Form Functionality -->
  <script is:inline>
    // Import pricing utilities
    const PRICING_CONFIG = {
      residential: {
        'Terraced House': {
          '1-2 Bed': { base: 20, frequency: { '4-weekly': 20, '8-weekly': 23, '12-weekly': 25, 'adhoc': 25 } },
          '2-3 Bed': { base: 25, frequency: { '4-weekly': 25, '8-weekly': 28, '12-weekly': 30, 'adhoc': 30 } },
          '4 Bed': { base: 30, frequency: { '4-weekly': 30, '8-weekly': 33, '12-weekly': 35, 'adhoc': 35 } },
          '5 Bed': { base: 35, frequency: { '4-weekly': 35, '8-weekly': 38, '12-weekly': 40, 'adhoc': 40 } }
        },
        'Semi-Detached House': {
          '1-2 Bed': { base: 20, frequency: { '4-weekly': 20, '8-weekly': 23, '12-weekly': 25, 'adhoc': 25 } },
          '2-3 Bed': { base: 25, frequency: { '4-weekly': 25, '8-weekly': 28, '12-weekly': 30, 'adhoc': 30 } },
          '4 Bed': { base: 30, frequency: { '4-weekly': 30, '8-weekly': 33, '12-weekly': 35, 'adhoc': 35 } },
          '5 Bed': { base: 35, frequency: { '4-weekly': 35, '8-weekly': 38, '12-weekly': 40, 'adhoc': 40 } }
        },
        'Detached House': {
          '1-2 Bed': { base: 25, frequency: { '4-weekly': 25, '8-weekly': 28, '12-weekly': 30, 'adhoc': 30 } },
          '2-3 Bed': { base: 30, frequency: { '4-weekly': 30, '8-weekly': 33, '12-weekly': 35, 'adhoc': 35 } },
          '4 Bed': { base: 35, frequency: { '4-weekly': 35, '8-weekly': 38, '12-weekly': 40, 'adhoc': 40 } },
          '5 Bed': { base: 40, frequency: { '4-weekly': 40, '8-weekly': 43, '12-weekly': 45, 'adhoc': 45 } }
        }
      }
    };

    // Form state
    let currentStep = 1;
    let formData = {
      bedrooms: '',
      propertyType: '',
      frequency: '',
      addons: {},
      extensions: {},
      isCommercial: false,
      commercial: {},
      details: {},
      totalPrice: 0,
      hasGutterDeal: false
    };

    // Initialize form
    document.addEventListener('DOMContentLoaded', function() {
      initializeEventListeners();
      updateQuoteDisplay();
    });

    function initializeEventListeners() {
      // Bedroom selection
      document.querySelectorAll('.bedroom-option').forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          selectBedroom(this.dataset.bedrooms, this.dataset.isCommercial === 'true');
        });
      });

      // Property type selection
      document.querySelectorAll('.property-type-option').forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          selectPropertyType(this.dataset.propertyType);
        });
      });

      // Frequency selection
      document.querySelectorAll('.frequency-option').forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          selectFrequency(this.dataset.frequency);
        });
      });

      // Addon checkboxes
      document.querySelectorAll('.addon-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
          toggleAddon(this.id, this.checked);
        });
      });

      // Extension checkboxes
      document.querySelectorAll('.extension-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
          toggleExtension(this.id, this.checked);
        });
      });

      // Custom checkbox styling for all checkboxes
      document.querySelectorAll('.addon-checkbox, .extension-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
          const customCheckbox = this.parentElement.querySelector('.checkbox-custom');
          const checkmark = customCheckbox.querySelector('svg');
          
          if (this.checked) {
            customCheckbox.classList.add('bg-red-600', 'border-red-600');
            customCheckbox.classList.remove('border-gray-400');
            checkmark.classList.remove('hidden');
          } else {
            customCheckbox.classList.remove('bg-red-600', 'border-red-600');
            customCheckbox.classList.add('border-gray-400');
            checkmark.classList.add('hidden');
          }
        });
      });

      // Navigation buttons
      document.getElementById('next-step').addEventListener('click', nextStep);
      document.getElementById('prev-step').addEventListener('click', prevStep);
      document.getElementById('submit-booking').addEventListener('click', submitBooking);
      document.getElementById('continue-to-details').addEventListener('click', nextStep);
      document.getElementById('continue-commercial').addEventListener('click', nextStep);
    }

    function selectBedroom(bedrooms, isCommercial) {
      const selectedButton = event.target.closest('.bedroom-option');
      
      formData.bedrooms = bedrooms;
      formData.isCommercial = isCommercial;
      
      // Update UI - keep bedroom selection highlighted
      document.querySelectorAll('.bedroom-option').forEach(btn => {
        btn.classList.remove('border-red-500', 'bg-red-600', 'border-blue-500', 'bg-blue-600');
        btn.classList.add('border-gray-600', 'bg-gray-700');
      });
      
      if (isCommercial) {
        selectedButton.classList.remove('border-gray-600', 'bg-gray-700');
        selectedButton.classList.add('border-blue-500', 'bg-blue-600');
        // Hide property type section for commercial
        document.getElementById('property-type-section').style.display = 'none';
        document.getElementById('frequency-section').style.display = 'none';
        document.getElementById('extensions-section').style.display = 'none';
      } else {
        selectedButton.classList.remove('border-gray-600', 'bg-gray-700');
        selectedButton.classList.add('border-red-500', 'bg-red-600');
        // Show property type section for residential (appears above commercial section)
        document.getElementById('property-type-section').style.display = 'block';
        document.getElementById('frequency-section').style.display = 'none';
        document.getElementById('extensions-section').style.display = 'none';
        // Reset property type selection
        formData.propertyType = '';
        formData.frequency = '';
        document.querySelectorAll('.property-type-option').forEach(btn => {
          btn.classList.remove('border-red-500', 'bg-red-600');
          btn.classList.add('border-gray-600', 'bg-gray-700');
        });
        document.querySelectorAll('.frequency-option').forEach(btn => {
          btn.classList.remove('border-red-500', 'bg-red-600');
          btn.classList.add('border-gray-600', 'bg-gray-700');
        });
      }
      
      updateQuoteDisplay();
      updateNavigationButtons();
    }

    function selectPropertyType(propertyType) {
      const selectedButton = event.target.closest('.property-type-option');
      
      formData.propertyType = propertyType;
      
      // Update UI - keep property type selection highlighted
      document.querySelectorAll('.property-type-option').forEach(btn => {
        btn.classList.remove('border-red-500', 'bg-red-600');
        btn.classList.add('border-gray-600', 'bg-gray-700');
      });
      
      selectedButton.classList.remove('border-gray-600', 'bg-gray-700');
      selectedButton.classList.add('border-red-500', 'bg-red-600');
      
      // Show frequency section
      document.getElementById('frequency-section').style.display = 'block';
      
      // Reset frequency selection
      formData.frequency = '';
      document.querySelectorAll('.frequency-option').forEach(btn => {
        btn.classList.remove('border-red-500', 'bg-red-600');
        btn.classList.add('border-gray-600', 'bg-gray-700');
      });
      
      updateQuoteDisplay();
      updateNavigationButtons();
    }

    function selectFrequency(frequency) {
      formData.frequency = frequency;
      
      // Update UI
      document.querySelectorAll('.frequency-option').forEach(btn => {
        btn.classList.remove('border-red-500', 'bg-red-600');
        btn.classList.add('border-gray-600', 'bg-gray-700');
      });
      
      event.target.closest('.frequency-option').classList.remove('border-gray-600', 'bg-gray-700');
      event.target.closest('.frequency-option').classList.add('border-red-500', 'bg-red-600');
      
      // Show extensions section and continue button for residential properties
      if (!formData.isCommercial) {
        document.getElementById('extensions-section').style.display = 'block';
        document.getElementById('continue-section').style.display = 'block';
      }
      
      updateQuoteDisplay();
      updateNavigationButtons();
    }

    function toggleAddon(addonId, isSelected) {
      if (isSelected) {
        const price = calculateAddonPrice(addonId);
        formData.addons[addonId] = { selected: true, price: price };
      } else {
        delete formData.addons[addonId];
      }
      
      // Check for gutter services deal
      checkGutterDeal();
      updateQuoteDisplay();
    }
    
    function checkGutterDeal() {
      const gutterClearing = formData.addons['gutterClearing']?.selected || false;
      const fasciaSoffit = formData.addons['fasciaSoffitGutter']?.selected || false;
      const dealBanner = document.getElementById('gutter-deal-banner');
      const dealStatus = document.getElementById('deal-status');
      const gutterLabel = document.getElementById('gutterClearing-label');
      const fasciaLabel = document.getElementById('fasciaSoffitGutter-label');
      
      // Always show the banner for upsell opportunity
      dealBanner.classList.remove('hidden');
      
      if (gutterClearing && fasciaSoffit) {
        // Deal activated - change banner to success state
        dealBanner.className = 'bg-gradient-to-r from-green-600 to-green-700 rounded-lg p-4 mb-4 border-2 border-green-400 animate-pulse';
        dealStatus.textContent = '✅ Deal Activated! First window clean is FREE!';
        dealStatus.className = 'text-green-200 text-xs mt-2 font-bold';
        gutterLabel.classList.add('ring-2', 'ring-green-400', 'bg-green-900');
        fasciaLabel.classList.add('ring-2', 'ring-green-400', 'bg-green-900');
        formData.hasGutterDeal = true;
      } else if (gutterClearing || fasciaSoffit) {
        // One service selected - encourage to add the other
        dealBanner.className = 'bg-gradient-to-r from-orange-600 to-red-700 rounded-lg p-4 mb-4 border-2 border-yellow-400 animate-pulse';
        if (gutterClearing) {
          dealStatus.textContent = '⚡ Add Fascia/Soffit/Gutter Cleaning to get your first window clean FREE!';
          gutterLabel.classList.add('ring-2', 'ring-orange-400', 'bg-orange-900');
          fasciaLabel.classList.remove('ring-2', 'ring-green-400', 'bg-green-900', 'ring-orange-400', 'bg-orange-900');
        } else {
          dealStatus.textContent = '⚡ Add Gutter Clearing to get your first window clean FREE!';
          fasciaLabel.classList.add('ring-2', 'ring-orange-400', 'bg-orange-900');
          gutterLabel.classList.remove('ring-2', 'ring-green-400', 'bg-green-900', 'ring-orange-400', 'bg-orange-900');
        }
        dealStatus.className = 'text-yellow-200 text-xs mt-2 font-bold';
        formData.hasGutterDeal = false;
      } else {
        // No services selected - initial upsell state
        dealBanner.className = 'bg-gradient-to-r from-blue-600 to-purple-700 rounded-lg p-4 mb-4 border-2 border-yellow-400';
        dealStatus.textContent = 'Select both services below to activate this deal';
        dealStatus.className = 'text-yellow-200 text-xs mt-2 font-medium';
        gutterLabel.classList.remove('ring-2', 'ring-red-400', 'bg-red-900', 'ring-green-400', 'bg-green-900', 'ring-orange-400', 'bg-orange-900');
        fasciaLabel.classList.remove('ring-2', 'ring-red-400', 'bg-red-900', 'ring-green-400', 'bg-green-900', 'ring-orange-400', 'bg-orange-900');
        formData.hasGutterDeal = false;
      }
    }
    
    function toggleExtension(extensionId, isSelected) {
      if (isSelected) {
        formData.extensions[extensionId] = { selected: true, price: 5 };
      } else {
        delete formData.extensions[extensionId];
      }
      updateQuoteDisplay();
    }
    
    function validateCommercialDetails() {
      const propertyType = document.getElementById('commercialPropertyType').value;
      const size = document.getElementById('commercialSize').value;
      const frequency = document.getElementById('commercialFrequency').value;
      
      if (!propertyType || !size || !frequency) {
        alert('Please fill in all required commercial property details');
        return false;
      }
      
      // Save commercial data
      formData.commercial = {
        propertyType: propertyType,
        size: size,
        frequency: frequency,
        services: [],
        notes: document.getElementById('commercialNotes').value
      };
      
      // Collect selected services
      const serviceCheckboxes = ['commercial-windows', 'commercial-gutters', 'commercial-pressure', 'commercial-fascia'];
      serviceCheckboxes.forEach(id => {
        const checkbox = document.getElementById(id);
        if (checkbox && checkbox.checked) {
          const serviceName = checkbox.nextElementSibling.textContent.trim();
          formData.commercial.services.push(serviceName);
        }
      });
      
      return true;
    }

    function calculateAddonPrice(addonId) {
      switch (addonId) {
        case 'gutterClearing':
          return calculateGutterClearingPrice(formData.propertyType, formData.bedrooms);
        case 'fasciaSoffitGutter':
          const isDetached = formData.propertyType?.toLowerCase().includes('detached');
          let basePrice = 60;
          
          if (formData.bedrooms === '4 Bed') basePrice += 20;
          else if (formData.bedrooms === '5 Bed') basePrice += 40;
          
          return isDetached ? basePrice + 20 : basePrice;
        case 'conservatoryRoof':
          return 0;
        default:
          return 0;
      }
    }

    function calculateGutterClearingPrice(propertyType, bedrooms) {
      let price = 80;

      if (propertyType && bedrooms) {
        const isDetached = propertyType.toLowerCase().includes('detached');
        
        if (bedrooms === '2-3 Bed') {
          price = isDetached ? 100 : 80;
        } else if (bedrooms === '4 Bed') {
          price = isDetached ? 120 : 100;
        } else if (bedrooms === '5 Bed') {
          price = isDetached ? 140 : 120;
        }
      }
      return price;
    }

    function calculateWindowCleaningPrice() {
      if (!formData.propertyType || !formData.bedrooms || !formData.frequency) return 0;
      
      const config = PRICING_CONFIG.residential[formData.propertyType];
      if (!config) return 0;

      const bedroomConfig = config[formData.bedrooms];
      if (!bedroomConfig) return 0;

      const frequencyPricing = bedroomConfig.frequency;
      return frequencyPricing[formData.frequency] || bedroomConfig.base;
    }

    function updateQuoteDisplay() {
      const quoteContent = document.getElementById('quote-content');
      const totalPriceElement = document.getElementById('total-price');
      
      let content = '';
      let total = 0;
      
      if (formData.bedrooms) {
        if (formData.isCommercial) {
          content += `<div class="flex justify-between text-gray-300"><span>Property:</span><span>${formData.bedrooms === 'Commercial' ? 'Commercial' : '6+ Bed Property'}</span></div>`;
          content += `<div class="text-center text-yellow-400 font-medium mt-3 mb-2">Physical Quotation Required</div>`;
          content += `<div class="text-center text-gray-400 text-sm">We'll visit your property to provide an accurate quote</div>`;
        } else {
          content += `<div class="flex justify-between text-gray-300"><span>Property:</span><span>${formData.bedrooms}</span></div>`;
        }
      }
      
      if (formData.propertyType && !formData.isCommercial) {
        content += `<div class="flex justify-between text-gray-300"><span>Type:</span><span>${formData.propertyType.replace(' House', '')}</span></div>`;
      }
      
      if (formData.frequency && !formData.isCommercial) {
        const windowPrice = calculateWindowCleaningPrice();
        total += windowPrice;
        const freqText = formData.frequency === 'adhoc' ? 'One-off' : formData.frequency.replace('-weekly', ' weekly');
        content += `<div class="flex justify-between text-white"><span>Window Cleaning (${freqText}):</span><span>£${windowPrice}</span></div>`;
      }
      
      // Add extensions to total
      Object.entries(formData.extensions).forEach(([extensionId, extension]) => {
        if (extension.selected) {
          total += extension.price;
          const extensionName = extensionId === 'extension' ? 'Extension' : 'Conservatory';
          content += `<div class="flex justify-between text-white"><span>${extensionName}:</span><span>£${extension.price}</span></div>`;
        }
      });
      
      // Update addon prices based on current property details
      if (!formData.isCommercial) {
        Object.keys(formData.addons).forEach(addonId => {
          const updatedPrice = calculateAddonPrice(addonId);
          formData.addons[addonId].price = updatedPrice;
          const priceElement = document.getElementById(`${addonId}-price`);
          if (priceElement) {
            priceElement.textContent = updatedPrice > 0 ? `£${updatedPrice}` : 'Quote';
          }
        });
        
        // Add selected addons to quote
        Object.entries(formData.addons).forEach(([addonId, addon]) => {
          if (addon.selected) {
            total += addon.price;
            const addonName = addonId === 'gutterClearing' ? 'Gutter Clearing' :
                             addonId === 'fasciaSoffitGutter' ? 'Fascia/Soffit/Gutter' :
                             'Conservatory Roof';
            content += `<div class="flex justify-between text-white"><span>${addonName}:</span><span>${addon.price > 0 ? '£' + addon.price : 'Quote'}</span></div>`;
          }
        });
        
        // Show deal if both gutter services are selected
        if (formData.hasGutterDeal) {
          const windowPrice = calculateWindowCleaningPrice();
          content += `<div class="flex justify-between text-green-400 font-semibold border-t border-gray-600 pt-2 mt-2"><span>🎉 First Window Clean:</span><span>FREE!</span></div>`;
          content += `<div class="flex justify-between text-green-300 text-sm"><span>Deal Savings:</span><span>£${windowPrice}</span></div>`;
        }
      }
      
      if (!content) {
        content = '<div class="flex justify-between text-gray-300"><span>Select bedrooms to continue...</span></div>';
      }
      
      quoteContent.innerHTML = content;
      totalPriceElement.textContent = formData.isCommercial ? '' : `£${total}`;
      formData.totalPrice = total;
    }

    function nextStep() {
      if (currentStep === 1 && !formData.bedrooms) {
        alert('Please select the number of bedrooms');
        return;
      }
      
      // Handle commercial vs residential flow
      if (currentStep === 1 && formData.isCommercial) {
        // Skip to commercial info step
        document.getElementById('step-1').classList.add('hidden');
        document.getElementById('step-1b-commercial').classList.remove('hidden');
        currentStep = 1.5; // Special step for commercial
        updateStepIndicators();
        updateNavigationButtons();
        return;
      }
      
      if (currentStep === 1 && !formData.bedrooms) {
        alert('Please select the number of bedrooms');
        return;
      }
      
      if (currentStep === 1 && !formData.isCommercial && !formData.propertyType) {
        alert('Please select your property type');
        return;
      }
      
      if (currentStep === 1 && !formData.isCommercial && !formData.frequency) {
        alert('Please select how often you would like cleaning');
        return;
      }
      
      if (currentStep === 1.5) {
        // Coming from commercial step, validate and go to details
        if (!validateCommercialDetails()) return;
        document.getElementById('step-1b-commercial').classList.add('hidden');
        document.getElementById('step-3').classList.remove('hidden');
        currentStep = 3;
        updateStepIndicators();
        updateNavigationButtons();
        return;
      }
      
      if (currentStep === 3) {
        if (!validateContactDetails()) return;
        populateReviewStep();
      }
      
      if (currentStep < 4) {
        document.getElementById(`step-${currentStep}`).classList.add('hidden');
        currentStep++;
        
        // Skip step 2 for commercial
        if (currentStep === 2 && formData.isCommercial) {
          currentStep = 3;
        }
        
        document.getElementById(`step-${currentStep}`).classList.remove('hidden');
        updateStepIndicators();
        updateNavigationButtons();
      }
    }

    function prevStep() {
      if (currentStep === 1.5) {
        // Going back from commercial step to main selection
        document.getElementById('step-1b-commercial').classList.add('hidden');
        document.getElementById('step-1').classList.remove('hidden');
        currentStep = 1;
        updateStepIndicators();
        updateNavigationButtons();
        return;
      }
      
      if (currentStep > 1) {
        document.getElementById(`step-${currentStep}`).classList.add('hidden');
        currentStep--;
        
        // Skip step 2 for commercial when going back
        if (currentStep === 2 && formData.isCommercial) {
          currentStep = 1;
        }
        
        document.getElementById(`step-${currentStep}`).classList.remove('hidden');
        updateStepIndicators();
        updateNavigationButtons();
      }
    }

    function updateStepIndicators() {
      for (let i = 1; i <= 4; i++) {
        const indicator = document.getElementById(`step-${i}-indicator`);
        const progress = document.getElementById(`progress-${i}`);
        
        let effectiveStep = currentStep;
        if (currentStep === 1.5) effectiveStep = 1; // Commercial substep
        
        if (i < effectiveStep || (currentStep === 1.5 && i === 1)) {
          indicator.classList.remove('bg-gray-600', 'text-gray-300');
          indicator.classList.add('bg-green-600', 'text-white');
          if (progress) progress.style.width = '100%';
        } else if (i === effectiveStep) {
          indicator.classList.remove('bg-gray-600', 'text-gray-300', 'bg-green-600');
          indicator.classList.add('bg-red-600', 'text-white');
          if (progress) progress.style.width = '50%';
        } else {
          indicator.classList.remove('bg-red-600', 'bg-green-600', 'text-white');
          indicator.classList.add('bg-gray-600', 'text-gray-300');
          if (progress) progress.style.width = '0%';
        }
      }
    }

    function updateNavigationButtons() {
      const prevBtn = document.getElementById('prev-step');
      const nextBtn = document.getElementById('next-step');
      
      if (currentStep === 1) {
        prevBtn.classList.add('hidden');
        nextBtn.classList.add('hidden');
      } else if (currentStep === 4) {
        prevBtn.classList.remove('hidden');
        nextBtn.classList.add('hidden');
      } else if (currentStep === 1 && (!formData.bedrooms || (!formData.frequency && !formData.isCommercial))) {
        // Show continue button only after bedroom, property type, and frequency are selected (or commercial)
        nextBtn.classList.add('hidden');
        prevBtn.classList.add('hidden');
      } else {
        prevBtn.classList.remove('hidden');
        nextBtn.classList.remove('hidden');
      }
    }

    function validateContactDetails() {
      const required = ['firstName', 'lastName', 'email', 'phone', 'address', 'postcode'];
      for (const field of required) {
        const value = document.getElementById(field).value.trim();
        if (!value) {
          alert(`Please fill in ${field.replace(/([A-Z])/g, ' $1').toLowerCase()}`);
          document.getElementById(field).focus();
          return false;
        }
      }
      
      // Save details to formData
      formData.details = {
        firstName: document.getElementById('firstName').value.trim(),
        lastName: document.getElementById('lastName').value.trim(),
        email: document.getElementById('email').value.trim(),
        phone: document.getElementById('phone').value.trim(),
        address: document.getElementById('address').value.trim(),
        postcode: document.getElementById('postcode').value.trim(),
        accessInfo: document.getElementById('accessInfo').value.trim(),
        additionalInfo: document.getElementById('additionalInfo').value.trim()
      };
      
      return true;
    }

    function populateReviewStep() {
      const reviewContent = document.getElementById('review-content');
      
      let content = `
        <div class="space-y-2">
          <h3 class="font-semibold text-red-400">Service Details</h3>
          <p>${formData.bedrooms} ${formData.propertyType}</p>
          <p>Frequency: ${formData.frequency === 'adhoc' ? 'One-off clean' : formData.frequency.replace('-weekly', ' weekly')}</p>
        </div>
      `;
      
      if (Object.keys(formData.addons).length > 0) {
        content += `
          <div class="space-y-2">
            <h3 class="font-semibold text-red-400">Additional Services</h3>
        `;
        Object.entries(formData.addons).forEach(([addonId, addon]) => {
          if (addon.selected) {
            const addonName = addonId === 'gutterClearing' ? 'Gutter Clearing' :
                             addonId === 'fasciaSoffitGutter' ? 'Fascia, Soffit & Gutter Clean' :
                             'Conservatory Roof Cleaning';
            content += `<p>${addonName}: ${addon.price > 0 ? '£' + addon.price : 'Quote Request'}</p>`;
          }
        });
        content += `</div>`;
      }
      
      content += `
        <div class="space-y-2">
          <h3 class="font-semibold text-red-400">Contact Details</h3>
          <p>${formData.details.firstName} ${formData.details.lastName}</p>
          <p>${formData.details.email}</p>
          <p>${formData.details.phone}</p>
          <p>${formData.details.address}, ${formData.details.postcode}</p>
        </div>
      `;
      
      if (formData.details.accessInfo) {
        content += `
          <div class="space-y-2">
            <h3 class="font-semibold text-red-400">Access Information</h3>
            <p>${formData.details.accessInfo}</p>
          </div>
        `;
      }
      
      if (formData.details.additionalInfo) {
        content += `
          <div class="space-y-2">
            <h3 class="font-semibold text-red-400">Additional Information</h3>
            <p>${formData.details.additionalInfo}</p>
          </div>
        `;
      }
      
      reviewContent.innerHTML = content;
    }

    function submitBooking() {
      // Validate reCAPTCHA
      const recaptchaResponse = grecaptcha.getResponse();
      if (!recaptchaResponse) {
        alert('Please complete the reCAPTCHA verification');
        return;
      }
      
      // Prepare email data
      const emailData = {
        first_name: formData.details.firstName,
        last_name: formData.details.lastName,
        email: formData.details.email,
        phone: formData.details.phone,
        address: formData.details.address,
        postcode: formData.details.postcode,
        property_type: formData.propertyType,
        bedrooms: formData.bedrooms,
        frequency: formData.frequency,
        window_cleaning_price: calculateWindowCleaningPrice(),
        addons: Object.entries(formData.addons).filter(([_, addon]) => addon.selected)
                      .map(([id, addon]) => {
                        const name = id === 'gutterClearing' ? 'Gutter Clearing' :
                                    id === 'fasciaSoffitGutter' ? 'Fascia, Soffit & Gutter Clean' :
                                    'Conservatory Roof Cleaning';
                        return `${name}: ${addon.price > 0 ? '£' + addon.price : 'Quote Request'}`;
                      }).join(', '),
        total_price: formData.totalPrice,
        access_info: formData.details.accessInfo || 'None provided',
        additional_info: formData.details.additionalInfo || 'None provided',
        'g-recaptcha-response': recaptchaResponse
      };
      
      // Submit via EmailJS
      emailjs.send('service_90gcdah', 'template_9eb0o4s', emailData)
        .then(function(response) {
          alert('Booking request submitted successfully! We will contact you within 24 hours.');
          window.location.href = '/';
        }, function(error) {
          console.error('EmailJS error:', error);
          alert('There was an error submitting your request. Please try again or contact us directly.');
        });
    }
  </script>

  <!-- Load External Scripts -->
  <script src="https://www.google.com/recaptcha/api.js" async defer></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"></script>
  <script type="text/javascript">
    (function(){
      emailjs.init("2wsYktgc6yRwHKQyN");
    })();
  </script>
</Layout>