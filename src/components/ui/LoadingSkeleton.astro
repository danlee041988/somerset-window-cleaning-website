---
export interface Props {
  type?: 'card' | 'text' | 'button' | 'image';
  class?: string;
  rows?: number;
}

const { type = 'text', class: className = '', rows = 1 } = Astro.props;
---

{type === 'card' ? (
  <div class={`skeleton rounded-xl bg-gray-100 animate-pulse ${className}`}>
    <div class="p-6 space-y-4">
      <div class="h-12 w-12 bg-gray-200 rounded-lg"></div>
      <div class="h-6 bg-gray-200 rounded w-3/4"></div>
      <div class="space-y-2">
        <div class="h-4 bg-gray-200 rounded"></div>
        <div class="h-4 bg-gray-200 rounded w-5/6"></div>
      </div>
    </div>
  </div>
) : type === 'text' ? (
  <div class={`space-y-2 ${className}`}>
    {Array.from({ length: rows }).map(() => (
      <div class="h-4 bg-gray-200 rounded animate-pulse"></div>
    ))}
  </div>
) : type === 'button' ? (
  <div class={`h-12 w-32 bg-gray-200 rounded-xl animate-pulse ${className}`}></div>
) : type === 'image' ? (
  <div class={`bg-gray-200 rounded-xl animate-pulse aspect-video ${className}`}></div>
) : null}

<style>
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>