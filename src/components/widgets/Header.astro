---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class="fixed top-0 left-0 right-0 z-50 bg-black/95 backdrop-blur-md border-b border-gray-800 min-h-[96px]"
  {...id ? { id } : {}}
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6">
    <!-- Mobile Header -->
    <div class="flex items-center justify-between h-20 lg:hidden">
      <!-- Logo -->
      <a href={getHomePermalink()} class="flex-shrink-0">
        <Logo />
      </a>
      
      <!-- Mobile Actions -->
      <div class="flex items-center gap-3">
        <a 
          href="tel:01458860339" 
          class="flex items-center justify-center w-10 h-10 rounded-lg bg-white/10 hover:bg-white/20 text-white transition-colors"
          aria-label="Call us"
        >
          <Icon name="tabler:phone" class="w-5 h-5" />
        </a>
        <button
          id="mobile-menu-toggle"
          class="flex items-center justify-center w-10 h-10 rounded-lg bg-white/10 hover:bg-white/20 text-white transition-colors"
          aria-label="Toggle menu"
        >
          <Icon name="tabler:menu-2" class="w-5 h-5" />
        </button>
      </div>
    </div>

    <!-- Desktop Header -->
    <div class="hidden lg:flex items-center justify-between h-24 py-4">
      <!-- Logo -->
      <a href={getHomePermalink()} class="flex-shrink-0">
        <Logo />
      </a>
      
      <!-- Navigation -->
      <nav class="flex items-center gap-8 mx-8">
        {links.map(({ text, href, links: subLinks }) => (
          <div class="relative group">
            {subLinks?.length ? (
              <>
                <button class="text-white hover:text-red-400 transition-colors py-2 px-3 flex items-center gap-1 font-medium text-base">
                  {text}
                  <Icon name="tabler:chevron-down" class="w-4 h-4 transition-transform group-hover:rotate-180" />
                </button>
                <div class="absolute top-full left-0 mt-2 w-64 bg-black/95 backdrop-blur-md border border-gray-800 rounded-xl shadow-2xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
                  <div class="p-2">
                    {subLinks.map(({ text: subText, href: subHref }) => (
                      <a
                        href={subHref}
                        class="block px-4 py-3 text-gray-300 hover:text-white hover:bg-white/10 rounded-lg transition-colors"
                      >
                        {subText}
                      </a>
                    ))}
                  </div>
                </div>
              </>
            ) : (
              <a
                href={href}
                class="text-white hover:text-red-400 transition-colors py-2 px-3 font-medium text-base"
                aria-current={href === currentPath ? 'page' : undefined}
              >
                {text}
              </a>
            )}
          </div>
        ))}
      </nav>
      
      <!-- Actions -->
      <div class="flex items-center gap-4 flex-shrink-0">
        <a 
          href="tel:01458860339" 
          class="hidden xl:flex items-center gap-2 text-white hover:text-red-400 transition-colors"
        >
          <Icon name="tabler:phone" class="w-5 h-5" />
          <span class="font-medium">01458 860339</span>
        </a>
        
        {actions.map((action) => (
          <Button {...action} class="text-sm px-6 py-2" />
        ))}
      </div>
    </div>
  </div>

  <!-- Mobile Menu Overlay -->
  <div
    id="mobile-menu"
    class="lg:hidden fixed inset-0 bg-black/95 backdrop-blur-md opacity-0 invisible transition-all duration-300 z-40"
  >
    <div class="flex flex-col h-full">
      <!-- Header -->
      <div class="flex items-center justify-between h-20 px-4 border-b border-gray-800">
        <Logo />
        <button
          id="mobile-menu-close"
          class="flex items-center justify-center w-10 h-10 rounded-lg bg-white/10 hover:bg-white/20 text-white transition-colors"
          aria-label="Close menu"
        >
          <Icon name="tabler:x" class="w-5 h-5" />
        </button>
      </div>
      
      <!-- Navigation -->
      <nav class="flex-1 overflow-y-auto p-4">
        <div class="space-y-2">
          {links.map(({ text, href, links: subLinks }) => (
            <div>
              {subLinks?.length ? (
                <div class="mobile-dropdown">
                  <button class="w-full text-left px-4 py-3 text-white hover:bg-white/10 rounded-lg transition-colors flex items-center justify-between">
                    {text}
                    <Icon name="tabler:chevron-down" class="w-4 h-4 transition-transform" />
                  </button>
                  <div class="mobile-submenu pl-4 space-y-1 max-h-0 overflow-hidden transition-all duration-200">
                    {subLinks.map(({ text: subText, href: subHref }) => (
                      <a
                        href={subHref}
                        class="block px-4 py-2 text-gray-300 hover:text-white hover:bg-white/5 rounded-lg transition-colors"
                      >
                        {subText}
                      </a>
                    ))}
                  </div>
                </div>
              ) : (
                <a
                  href={href}
                  class="block px-4 py-3 text-white hover:bg-white/10 rounded-lg transition-colors"
                >
                  {text}
                </a>
              )}
            </div>
          ))}
        </div>
      </nav>
      
      <!-- Footer -->
      <div class="p-4 border-t border-gray-800">
        <div class="space-y-3">
          <a 
            href="tel:01458860339" 
            class="flex items-center gap-3 px-4 py-3 bg-white/10 rounded-lg text-white hover:bg-white/20 transition-colors"
          >
            <Icon name="tabler:phone" class="w-5 h-5" />
            <span class="font-medium">01458 860339</span>
          </a>
          
          {actions.map((action) => (
            <Button {...action} class="w-full justify-center" />
          ))}
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenuClose = document.getElementById('mobile-menu-close');
    const mobileMenu = document.getElementById('mobile-menu');
    
    function openMobileMenu() {
      mobileMenu?.classList.remove('opacity-0', 'invisible');
      mobileMenu?.classList.add('opacity-100', 'visible');
      document.body.style.overflow = 'hidden';
    }
    
    function closeMobileMenu() {
      mobileMenu?.classList.remove('opacity-100', 'visible');
      mobileMenu?.classList.add('opacity-0', 'invisible');
      document.body.style.overflow = '';
    }
    
    mobileMenuToggle?.addEventListener('click', openMobileMenu);
    mobileMenuClose?.addEventListener('click', closeMobileMenu);
    
    // Close on overlay click
    mobileMenu?.addEventListener('click', (e) => {
      if (e.target === mobileMenu) {
        closeMobileMenu();
      }
    });
    
    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeMobileMenu();
      }
    });
    
    // Mobile dropdown functionality
    document.querySelectorAll('.mobile-dropdown button').forEach(button => {
      button.addEventListener('click', () => {
        const dropdown = button.parentElement;
        const submenu = dropdown?.querySelector('.mobile-submenu');
        const chevron = button.querySelector('svg');
        
        if (submenu) {
          const isOpen = submenu.style.maxHeight && submenu.style.maxHeight !== '0px';
          
          if (isOpen) {
            submenu.style.maxHeight = '0px';
            chevron?.classList.remove('rotate-180');
          } else {
            submenu.style.maxHeight = submenu.scrollHeight + 'px';
            chevron?.classList.add('rotate-180');
          }
        }
      });
    });
  });
</script>

<style>
  /* Smooth transitions for mobile menu */
  .mobile-submenu {
    transition: max-height 0.2s ease-in-out;
  }
  
  /* Ensure consistent header height and navigation visibility */
  header {
    min-height: 5rem; /* 80px mobile */
  }
  
  @media (min-width: 1024px) {
    header {
      min-height: 6rem; /* 96px desktop */
    }
  }
  
  /* Ensure navigation is visible */
  nav {
    display: flex !important;
    align-items: center;
    gap: 2rem;
  }
  
  /* Make navigation links more visible */
  nav a, nav button {
    white-space: nowrap;
    font-size: 1rem;
    font-weight: 500;
  }
</style>