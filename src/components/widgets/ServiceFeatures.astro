---
import type { Features as Props } from '~/types';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import { Icon } from 'astro-icon/components';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  
  <!-- Dark background section like homepage Stats -->
  <div class="bg-black py-12 px-4 -mx-4 sm:-mx-6 lg:-mx-8">
    <div class="max-w-7xl mx-auto">
      <div class={`grid gap-8 ${
        columns === 2
          ? 'md:grid-cols-2'
          : columns === 3
            ? 'md:grid-cols-2 lg:grid-cols-3'
            : columns === 4
              ? 'md:grid-cols-2 lg:grid-cols-4'
              : 'grid-cols-1'
      }`}>
        {
          items && items.map(({ title, description, icon }, index) => (
            <div 
              class="bg-secondary p-6 rounded-xl border border-gray-700 hover:border-red-500/50 transition-all duration-300 hover:scale-105 hover:shadow-xl hover:shadow-red-500/10 group"
              style={`animation-delay: ${index * 100}ms`}
            >
              <div class="flex items-start">
                {icon && (
                  <div class="flex-shrink-0 mr-4">
                    <div class="w-12 h-12 bg-red-600 rounded-lg flex items-center justify-center group-hover:bg-red-500 transition-colors">
                      <Icon name={icon} class="w-6 h-6 text-white" />
                    </div>
                  </div>
                )}
                <div class="flex-grow">
                  {title && (
                    <h3 class="text-xl font-bold text-white mb-2 group-hover:text-red-400 transition-colors">
                      {title}
                    </h3>
                  )}
                  {description && (
                    <p class="text-gray-300 text-sm leading-relaxed">
                      {description}
                    </p>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</WidgetWrapper>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .bg-secondary {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
  }
</style>