---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  items: Array<{
    title: string;
    description: string;
    callToAction?: {
      text: string;
      href: string;
    };
  }>;
  columns?: number;
  id?: string;
  isDark?: boolean;
  classes?: Record<string, string>;
  bg?: string;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  
  <div class={`grid gap-4 md:gap-6 ${
    columns === 2 
      ? 'md:grid-cols-2' 
      : columns === 3 
        ? 'md:grid-cols-2 lg:grid-cols-3' 
        : 'grid-cols-1'
  }`}>
    {items.map(({ title, description, callToAction }) => (
      <div class="relative flex flex-col p-6 bg-black border border-red-500 rounded-lg hover:border-red-400 transition-colors duration-300 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
        <h3 class="text-xl font-bold text-white mb-3">{title}</h3>
        <p class="text-gray-300 text-sm mb-4 flex-grow" set:html={description} />
        {callToAction && (
          <div class="mt-auto">
            <Button 
              {...callToAction} 
              variant="link" 
              class="text-red-500 hover:text-red-400 font-semibold transition-colors duration-200"
            />
          </div>
        )}
      </div>
    ))}
  </div>
</WidgetWrapper>